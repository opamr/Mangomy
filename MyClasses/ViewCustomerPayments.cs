/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MyPro
{
	public class ViewCustomerPayments : SqlClientEntity
	{
		public ViewCustomerPayments()
		{
			this.QuerySource = "ViewCustomerPayments";
			this.MappingName = "ViewCustomerPayments";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Pay_ID
			{
				get
				{
					return new SqlParameter("@Pay_ID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter CustomerBill_Id
			{
				get
				{
					return new SqlParameter("@CustomerBill_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Barcode_Id
			{
				get
				{
					return new SqlParameter("@Barcode_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Pay_Price
			{
				get
				{
					return new SqlParameter("@Pay_Price", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter PayCount
			{
				get
				{
					return new SqlParameter("@PayCount", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Pay_Total
			{
				get
				{
					return new SqlParameter("@Pay_Total", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Pay_Profit
			{
				get
				{
					return new SqlParameter("@Pay_Profit", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Customer_Mobile
			{
				get
				{
					return new SqlParameter("@Customer_Mobile", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_CustomerPhone
			{
				get
				{
					return new SqlParameter("@Bill_CustomerPhone", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Customer_Name
			{
				get
				{
					return new SqlParameter("@Customer_Name", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Bill_CustomerName
			{
				get
				{
					return new SqlParameter("@Bill_CustomerName", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Pay_Bank
			{
				get
				{
					return new SqlParameter("@Pay_Bank", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Pay_Cash
			{
				get
				{
					return new SqlParameter("@Pay_Cash", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_DiscountType
			{
				get
				{
					return new SqlParameter("@Bill_DiscountType", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_DiscountMoney
			{
				get
				{
					return new SqlParameter("@Bill_DiscountMoney", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_Type
			{
				get
				{
					return new SqlParameter("@Bill_Type", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Time
			{
				get
				{
					return new SqlParameter("@Bill_Time", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Date
			{
				get
				{
					return new SqlParameter("@Bill_Date", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter Bill_Details
			{
				get
				{
					return new SqlParameter("@Bill_Details", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Customer_Id
			{
				get
				{
					return new SqlParameter("@Customer_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Titel_Id
			{
				get
				{
					return new SqlParameter("@Titel_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Barcode_Unit
			{
				get
				{
					return new SqlParameter("@Barcode_Unit", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Barcode_PayPrice
			{
				get
				{
					return new SqlParameter("@Barcode_PayPrice", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Barcode_BuyPrice
			{
				get
				{
					return new SqlParameter("@Barcode_BuyPrice", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Barcode_Code
			{
				get
				{
					return new SqlParameter("@Barcode_Code", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Barcode_Count
			{
				get
				{
					return new SqlParameter("@Barcode_Count", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Good_TraidName
			{
				get
				{
					return new SqlParameter("@Good_TraidName", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Category_Name
			{
				get
				{
					return new SqlParameter("@Category_Name", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter User_Name
			{
				get
				{
					return new SqlParameter("@User_Name", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Category_Id
			{
				get
				{
					return new SqlParameter("@Category_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Bill_Vat
			{
				get
				{
					return new SqlParameter("@Bill_Vat", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_Vat_Value
			{
				get
				{
					return new SqlParameter("@Bill_Vat_Value", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter PayPriceAfterVat
			{
				get
				{
					return new SqlParameter("@PayPriceAfterVat", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter PayTotalAfterVat
			{
				get
				{
					return new SqlParameter("@PayTotalAfterVat", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_QrCode
			{
				get
				{
					return new SqlParameter("@Bill_QrCode", SqlDbType.Image, 2147483647);
				}
			}
			
			public static SqlParameter Customer_VatNumber
			{
				get
				{
					return new SqlParameter("@Customer_VatNumber", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Customer_Pay
			{
				get
				{
					return new SqlParameter("@Customer_Pay", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Customer_Rest
			{
				get
				{
					return new SqlParameter("@Customer_Rest", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Notes
			{
				get
				{
					return new SqlParameter("@Bill_Notes", SqlDbType.NVarChar, 1073741823);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Pay_ID = "Pay_ID";
            public const string CustomerBill_Id = "CustomerBill_Id";
            public const string Barcode_Id = "Barcode_Id";
            public const string Pay_Price = "Pay_Price";
            public const string PayCount = "PayCount";
            public const string Pay_Total = "Pay_Total";
            public const string Pay_Profit = "Pay_Profit";
            public const string Customer_Mobile = "Customer_Mobile";
            public const string Bill_CustomerPhone = "Bill_CustomerPhone";
            public const string Customer_Name = "Customer_Name";
            public const string Bill_CustomerName = "Bill_CustomerName";
            public const string Pay_Bank = "Pay_Bank";
            public const string Pay_Cash = "Pay_Cash";
            public const string Bill_DiscountType = "Bill_DiscountType";
            public const string Bill_DiscountMoney = "Bill_DiscountMoney";
            public const string Bill_Type = "Bill_Type";
            public const string Bill_Time = "Bill_Time";
            public const string Bill_Date = "Bill_Date";
            public const string Bill_Details = "Bill_Details";
            public const string Customer_Id = "Customer_Id";
            public const string Titel_Id = "Titel_Id";
            public const string Barcode_Unit = "Barcode_Unit";
            public const string Barcode_PayPrice = "Barcode_PayPrice";
            public const string Barcode_BuyPrice = "Barcode_BuyPrice";
            public const string Barcode_Code = "Barcode_Code";
            public const string Barcode_Count = "Barcode_Count";
            public const string Good_TraidName = "Good_TraidName";
            public const string Category_Name = "Category_Name";
            public const string User_Name = "User_Name";
            public const string Category_Id = "Category_Id";
            public const string Bill_Vat = "Bill_Vat";
            public const string Bill_Vat_Value = "Bill_Vat_Value";
            public const string PayPriceAfterVat = "PayPriceAfterVat";
            public const string PayTotalAfterVat = "PayTotalAfterVat";
            public const string Bill_QrCode = "Bill_QrCode";
            public const string Customer_VatNumber = "Customer_VatNumber";
            public const string Customer_Pay = "Customer_Pay";
            public const string Customer_Rest = "Customer_Rest";
            public const string Bill_Notes = "Bill_Notes";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Pay_ID] = ViewCustomerPayments.PropertyNames.Pay_ID;
					ht[CustomerBill_Id] = ViewCustomerPayments.PropertyNames.CustomerBill_Id;
					ht[Barcode_Id] = ViewCustomerPayments.PropertyNames.Barcode_Id;
					ht[Pay_Price] = ViewCustomerPayments.PropertyNames.Pay_Price;
					ht[PayCount] = ViewCustomerPayments.PropertyNames.PayCount;
					ht[Pay_Total] = ViewCustomerPayments.PropertyNames.Pay_Total;
					ht[Pay_Profit] = ViewCustomerPayments.PropertyNames.Pay_Profit;
					ht[Customer_Mobile] = ViewCustomerPayments.PropertyNames.Customer_Mobile;
					ht[Bill_CustomerPhone] = ViewCustomerPayments.PropertyNames.Bill_CustomerPhone;
					ht[Customer_Name] = ViewCustomerPayments.PropertyNames.Customer_Name;
					ht[Bill_CustomerName] = ViewCustomerPayments.PropertyNames.Bill_CustomerName;
					ht[Pay_Bank] = ViewCustomerPayments.PropertyNames.Pay_Bank;
					ht[Pay_Cash] = ViewCustomerPayments.PropertyNames.Pay_Cash;
					ht[Bill_DiscountType] = ViewCustomerPayments.PropertyNames.Bill_DiscountType;
					ht[Bill_DiscountMoney] = ViewCustomerPayments.PropertyNames.Bill_DiscountMoney;
					ht[Bill_Type] = ViewCustomerPayments.PropertyNames.Bill_Type;
					ht[Bill_Time] = ViewCustomerPayments.PropertyNames.Bill_Time;
					ht[Bill_Date] = ViewCustomerPayments.PropertyNames.Bill_Date;
					ht[Bill_Details] = ViewCustomerPayments.PropertyNames.Bill_Details;
					ht[Customer_Id] = ViewCustomerPayments.PropertyNames.Customer_Id;
					ht[Titel_Id] = ViewCustomerPayments.PropertyNames.Titel_Id;
					ht[Barcode_Unit] = ViewCustomerPayments.PropertyNames.Barcode_Unit;
					ht[Barcode_PayPrice] = ViewCustomerPayments.PropertyNames.Barcode_PayPrice;
					ht[Barcode_BuyPrice] = ViewCustomerPayments.PropertyNames.Barcode_BuyPrice;
					ht[Barcode_Code] = ViewCustomerPayments.PropertyNames.Barcode_Code;
					ht[Barcode_Count] = ViewCustomerPayments.PropertyNames.Barcode_Count;
					ht[Good_TraidName] = ViewCustomerPayments.PropertyNames.Good_TraidName;
					ht[Category_Name] = ViewCustomerPayments.PropertyNames.Category_Name;
					ht[User_Name] = ViewCustomerPayments.PropertyNames.User_Name;
					ht[Category_Id] = ViewCustomerPayments.PropertyNames.Category_Id;
					ht[Bill_Vat] = ViewCustomerPayments.PropertyNames.Bill_Vat;
					ht[Bill_Vat_Value] = ViewCustomerPayments.PropertyNames.Bill_Vat_Value;
					ht[PayPriceAfterVat] = ViewCustomerPayments.PropertyNames.PayPriceAfterVat;
					ht[PayTotalAfterVat] = ViewCustomerPayments.PropertyNames.PayTotalAfterVat;
					ht[Bill_QrCode] = ViewCustomerPayments.PropertyNames.Bill_QrCode;
					ht[Customer_VatNumber] = ViewCustomerPayments.PropertyNames.Customer_VatNumber;
					ht[Customer_Pay] = ViewCustomerPayments.PropertyNames.Customer_Pay;
					ht[Customer_Rest] = ViewCustomerPayments.PropertyNames.Customer_Rest;
					ht[Bill_Notes] = ViewCustomerPayments.PropertyNames.Bill_Notes;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Pay_ID = "Pay_ID";
            public const string CustomerBill_Id = "CustomerBill_Id";
            public const string Barcode_Id = "Barcode_Id";
            public const string Pay_Price = "Pay_Price";
            public const string PayCount = "PayCount";
            public const string Pay_Total = "Pay_Total";
            public const string Pay_Profit = "Pay_Profit";
            public const string Customer_Mobile = "Customer_Mobile";
            public const string Bill_CustomerPhone = "Bill_CustomerPhone";
            public const string Customer_Name = "Customer_Name";
            public const string Bill_CustomerName = "Bill_CustomerName";
            public const string Pay_Bank = "Pay_Bank";
            public const string Pay_Cash = "Pay_Cash";
            public const string Bill_DiscountType = "Bill_DiscountType";
            public const string Bill_DiscountMoney = "Bill_DiscountMoney";
            public const string Bill_Type = "Bill_Type";
            public const string Bill_Time = "Bill_Time";
            public const string Bill_Date = "Bill_Date";
            public const string Bill_Details = "Bill_Details";
            public const string Customer_Id = "Customer_Id";
            public const string Titel_Id = "Titel_Id";
            public const string Barcode_Unit = "Barcode_Unit";
            public const string Barcode_PayPrice = "Barcode_PayPrice";
            public const string Barcode_BuyPrice = "Barcode_BuyPrice";
            public const string Barcode_Code = "Barcode_Code";
            public const string Barcode_Count = "Barcode_Count";
            public const string Good_TraidName = "Good_TraidName";
            public const string Category_Name = "Category_Name";
            public const string User_Name = "User_Name";
            public const string Category_Id = "Category_Id";
            public const string Bill_Vat = "Bill_Vat";
            public const string Bill_Vat_Value = "Bill_Vat_Value";
            public const string PayPriceAfterVat = "PayPriceAfterVat";
            public const string PayTotalAfterVat = "PayTotalAfterVat";
            public const string Bill_QrCode = "Bill_QrCode";
            public const string Customer_VatNumber = "Customer_VatNumber";
            public const string Customer_Pay = "Customer_Pay";
            public const string Customer_Rest = "Customer_Rest";
            public const string Bill_Notes = "Bill_Notes";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Pay_ID] = ViewCustomerPayments.ColumnNames.Pay_ID;
					ht[CustomerBill_Id] = ViewCustomerPayments.ColumnNames.CustomerBill_Id;
					ht[Barcode_Id] = ViewCustomerPayments.ColumnNames.Barcode_Id;
					ht[Pay_Price] = ViewCustomerPayments.ColumnNames.Pay_Price;
					ht[PayCount] = ViewCustomerPayments.ColumnNames.PayCount;
					ht[Pay_Total] = ViewCustomerPayments.ColumnNames.Pay_Total;
					ht[Pay_Profit] = ViewCustomerPayments.ColumnNames.Pay_Profit;
					ht[Customer_Mobile] = ViewCustomerPayments.ColumnNames.Customer_Mobile;
					ht[Bill_CustomerPhone] = ViewCustomerPayments.ColumnNames.Bill_CustomerPhone;
					ht[Customer_Name] = ViewCustomerPayments.ColumnNames.Customer_Name;
					ht[Bill_CustomerName] = ViewCustomerPayments.ColumnNames.Bill_CustomerName;
					ht[Pay_Bank] = ViewCustomerPayments.ColumnNames.Pay_Bank;
					ht[Pay_Cash] = ViewCustomerPayments.ColumnNames.Pay_Cash;
					ht[Bill_DiscountType] = ViewCustomerPayments.ColumnNames.Bill_DiscountType;
					ht[Bill_DiscountMoney] = ViewCustomerPayments.ColumnNames.Bill_DiscountMoney;
					ht[Bill_Type] = ViewCustomerPayments.ColumnNames.Bill_Type;
					ht[Bill_Time] = ViewCustomerPayments.ColumnNames.Bill_Time;
					ht[Bill_Date] = ViewCustomerPayments.ColumnNames.Bill_Date;
					ht[Bill_Details] = ViewCustomerPayments.ColumnNames.Bill_Details;
					ht[Customer_Id] = ViewCustomerPayments.ColumnNames.Customer_Id;
					ht[Titel_Id] = ViewCustomerPayments.ColumnNames.Titel_Id;
					ht[Barcode_Unit] = ViewCustomerPayments.ColumnNames.Barcode_Unit;
					ht[Barcode_PayPrice] = ViewCustomerPayments.ColumnNames.Barcode_PayPrice;
					ht[Barcode_BuyPrice] = ViewCustomerPayments.ColumnNames.Barcode_BuyPrice;
					ht[Barcode_Code] = ViewCustomerPayments.ColumnNames.Barcode_Code;
					ht[Barcode_Count] = ViewCustomerPayments.ColumnNames.Barcode_Count;
					ht[Good_TraidName] = ViewCustomerPayments.ColumnNames.Good_TraidName;
					ht[Category_Name] = ViewCustomerPayments.ColumnNames.Category_Name;
					ht[User_Name] = ViewCustomerPayments.ColumnNames.User_Name;
					ht[Category_Id] = ViewCustomerPayments.ColumnNames.Category_Id;
					ht[Bill_Vat] = ViewCustomerPayments.ColumnNames.Bill_Vat;
					ht[Bill_Vat_Value] = ViewCustomerPayments.ColumnNames.Bill_Vat_Value;
					ht[PayPriceAfterVat] = ViewCustomerPayments.ColumnNames.PayPriceAfterVat;
					ht[PayTotalAfterVat] = ViewCustomerPayments.ColumnNames.PayTotalAfterVat;
					ht[Bill_QrCode] = ViewCustomerPayments.ColumnNames.Bill_QrCode;
					ht[Customer_VatNumber] = ViewCustomerPayments.ColumnNames.Customer_VatNumber;
					ht[Customer_Pay] = ViewCustomerPayments.ColumnNames.Customer_Pay;
					ht[Customer_Rest] = ViewCustomerPayments.ColumnNames.Customer_Rest;
					ht[Bill_Notes] = ViewCustomerPayments.ColumnNames.Bill_Notes;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Pay_ID = "s_Pay_ID";
            public const string CustomerBill_Id = "s_CustomerBill_Id";
            public const string Barcode_Id = "s_Barcode_Id";
            public const string Pay_Price = "s_Pay_Price";
            public const string PayCount = "s_PayCount";
            public const string Pay_Total = "s_Pay_Total";
            public const string Pay_Profit = "s_Pay_Profit";
            public const string Customer_Mobile = "s_Customer_Mobile";
            public const string Bill_CustomerPhone = "s_Bill_CustomerPhone";
            public const string Customer_Name = "s_Customer_Name";
            public const string Bill_CustomerName = "s_Bill_CustomerName";
            public const string Pay_Bank = "s_Pay_Bank";
            public const string Pay_Cash = "s_Pay_Cash";
            public const string Bill_DiscountType = "s_Bill_DiscountType";
            public const string Bill_DiscountMoney = "s_Bill_DiscountMoney";
            public const string Bill_Type = "s_Bill_Type";
            public const string Bill_Time = "s_Bill_Time";
            public const string Bill_Date = "s_Bill_Date";
            public const string Bill_Details = "s_Bill_Details";
            public const string Customer_Id = "s_Customer_Id";
            public const string Titel_Id = "s_Titel_Id";
            public const string Barcode_Unit = "s_Barcode_Unit";
            public const string Barcode_PayPrice = "s_Barcode_PayPrice";
            public const string Barcode_BuyPrice = "s_Barcode_BuyPrice";
            public const string Barcode_Code = "s_Barcode_Code";
            public const string Barcode_Count = "s_Barcode_Count";
            public const string Good_TraidName = "s_Good_TraidName";
            public const string Category_Name = "s_Category_Name";
            public const string User_Name = "s_User_Name";
            public const string Category_Id = "s_Category_Id";
            public const string Bill_Vat = "s_Bill_Vat";
            public const string Bill_Vat_Value = "s_Bill_Vat_Value";
            public const string PayPriceAfterVat = "s_PayPriceAfterVat";
            public const string PayTotalAfterVat = "s_PayTotalAfterVat";
            public const string Bill_QrCode = "s_Bill_QrCode";
            public const string Customer_VatNumber = "s_Customer_VatNumber";
            public const string Customer_Pay = "s_Customer_Pay";
            public const string Customer_Rest = "s_Customer_Rest";
            public const string Bill_Notes = "s_Bill_Notes";

		}
		#endregion	
		
		#region Properties
			public virtual int Pay_ID
	    {
			get
	        {
				return base.Getint(ColumnNames.Pay_ID);
			}
			set
	        {
				base.Setint(ColumnNames.Pay_ID, value);
			}
		}

		public virtual int CustomerBill_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.CustomerBill_Id);
			}
			set
	        {
				base.Setint(ColumnNames.CustomerBill_Id, value);
			}
		}

		public virtual int Barcode_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Barcode_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Barcode_Id, value);
			}
		}

		public virtual double Pay_Price
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Pay_Price);
			}
			set
	        {
				base.Setdouble(ColumnNames.Pay_Price, value);
			}
		}

		public virtual double PayCount
	    {
			get
	        {
				return base.Getdouble(ColumnNames.PayCount);
			}
			set
	        {
				base.Setdouble(ColumnNames.PayCount, value);
			}
		}

		public virtual double Pay_Total
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Pay_Total);
			}
			set
	        {
				base.Setdouble(ColumnNames.Pay_Total, value);
			}
		}

		public virtual double Pay_Profit
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Pay_Profit);
			}
			set
	        {
				base.Setdouble(ColumnNames.Pay_Profit, value);
			}
		}

		public virtual string Customer_Mobile
	    {
			get
	        {
				return base.Getstring(ColumnNames.Customer_Mobile);
			}
			set
	        {
				base.Setstring(ColumnNames.Customer_Mobile, value);
			}
		}

		public virtual string Bill_CustomerPhone
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_CustomerPhone);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_CustomerPhone, value);
			}
		}

		public virtual string Customer_Name
	    {
			get
	        {
				return base.Getstring(ColumnNames.Customer_Name);
			}
			set
	        {
				base.Setstring(ColumnNames.Customer_Name, value);
			}
		}

		public virtual string Bill_CustomerName
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_CustomerName);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_CustomerName, value);
			}
		}

		public virtual double Pay_Bank
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Pay_Bank);
			}
			set
	        {
				base.Setdouble(ColumnNames.Pay_Bank, value);
			}
		}

		public virtual double Pay_Cash
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Pay_Cash);
			}
			set
	        {
				base.Setdouble(ColumnNames.Pay_Cash, value);
			}
		}

		public virtual string Bill_DiscountType
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_DiscountType);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_DiscountType, value);
			}
		}

		public virtual double Bill_DiscountMoney
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_DiscountMoney);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_DiscountMoney, value);
			}
		}

		public virtual string Bill_Type
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Type);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Type, value);
			}
		}

		public virtual string Bill_Time
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Time);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Time, value);
			}
		}

		public virtual DateTime Bill_Date
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.Bill_Date);
			}
			set
	        {
				base.SetDateTime(ColumnNames.Bill_Date, value);
			}
		}

		public virtual string Bill_Details
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Details);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Details, value);
			}
		}

		public virtual int Customer_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Customer_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Customer_Id, value);
			}
		}

		public virtual int Titel_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Titel_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Titel_Id, value);
			}
		}

		public virtual string Barcode_Unit
	    {
			get
	        {
				return base.Getstring(ColumnNames.Barcode_Unit);
			}
			set
	        {
				base.Setstring(ColumnNames.Barcode_Unit, value);
			}
		}

		public virtual string Barcode_PayPrice
	    {
			get
	        {
				return base.Getstring(ColumnNames.Barcode_PayPrice);
			}
			set
	        {
				base.Setstring(ColumnNames.Barcode_PayPrice, value);
			}
		}

		public virtual string Barcode_BuyPrice
	    {
			get
	        {
				return base.Getstring(ColumnNames.Barcode_BuyPrice);
			}
			set
	        {
				base.Setstring(ColumnNames.Barcode_BuyPrice, value);
			}
		}

		public virtual string Barcode_Code
	    {
			get
	        {
				return base.Getstring(ColumnNames.Barcode_Code);
			}
			set
	        {
				base.Setstring(ColumnNames.Barcode_Code, value);
			}
		}

		public virtual string Barcode_Count
	    {
			get
	        {
				return base.Getstring(ColumnNames.Barcode_Count);
			}
			set
	        {
				base.Setstring(ColumnNames.Barcode_Count, value);
			}
		}

		public virtual string Good_TraidName
	    {
			get
	        {
				return base.Getstring(ColumnNames.Good_TraidName);
			}
			set
	        {
				base.Setstring(ColumnNames.Good_TraidName, value);
			}
		}

		public virtual string Category_Name
	    {
			get
	        {
				return base.Getstring(ColumnNames.Category_Name);
			}
			set
	        {
				base.Setstring(ColumnNames.Category_Name, value);
			}
		}

		public virtual string User_Name
	    {
			get
	        {
				return base.Getstring(ColumnNames.User_Name);
			}
			set
	        {
				base.Setstring(ColumnNames.User_Name, value);
			}
		}

		public virtual int Category_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Category_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Category_Id, value);
			}
		}

		public virtual double Bill_Vat
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Vat);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Vat, value);
			}
		}

		public virtual double Bill_Vat_Value
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Vat_Value);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Vat_Value, value);
			}
		}

		public virtual double PayPriceAfterVat
	    {
			get
	        {
				return base.Getdouble(ColumnNames.PayPriceAfterVat);
			}
			set
	        {
				base.Setdouble(ColumnNames.PayPriceAfterVat, value);
			}
		}

		public virtual double PayTotalAfterVat
	    {
			get
	        {
				return base.Getdouble(ColumnNames.PayTotalAfterVat);
			}
			set
	        {
				base.Setdouble(ColumnNames.PayTotalAfterVat, value);
			}
		}

		public virtual byte[] Bill_QrCode
	    {
			get
	        {
				return base.GetByteArray(ColumnNames.Bill_QrCode);
			}
			set
	        {
				base.SetByteArray(ColumnNames.Bill_QrCode, value);
			}
		}

		public virtual string Customer_VatNumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.Customer_VatNumber);
			}
			set
	        {
				base.Setstring(ColumnNames.Customer_VatNumber, value);
			}
		}

		public virtual string Customer_Pay
	    {
			get
	        {
				return base.Getstring(ColumnNames.Customer_Pay);
			}
			set
	        {
				base.Setstring(ColumnNames.Customer_Pay, value);
			}
		}

		public virtual string Customer_Rest
	    {
			get
	        {
				return base.Getstring(ColumnNames.Customer_Rest);
			}
			set
	        {
				base.Setstring(ColumnNames.Customer_Rest, value);
			}
		}

		public virtual string Bill_Notes
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Notes);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Notes, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Pay_ID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_ID) ? string.Empty : base.GetintAsString(ColumnNames.Pay_ID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_ID);
				else
					this.Pay_ID = base.SetintAsString(ColumnNames.Pay_ID, value);
			}
		}

		public virtual string s_CustomerBill_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CustomerBill_Id) ? string.Empty : base.GetintAsString(ColumnNames.CustomerBill_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CustomerBill_Id);
				else
					this.CustomerBill_Id = base.SetintAsString(ColumnNames.CustomerBill_Id, value);
			}
		}

		public virtual string s_Barcode_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_Id) ? string.Empty : base.GetintAsString(ColumnNames.Barcode_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_Id);
				else
					this.Barcode_Id = base.SetintAsString(ColumnNames.Barcode_Id, value);
			}
		}

		public virtual string s_Pay_Price
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_Price) ? string.Empty : base.GetdoubleAsString(ColumnNames.Pay_Price);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_Price);
				else
					this.Pay_Price = base.SetdoubleAsString(ColumnNames.Pay_Price, value);
			}
		}

		public virtual string s_PayCount
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PayCount) ? string.Empty : base.GetdoubleAsString(ColumnNames.PayCount);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PayCount);
				else
					this.PayCount = base.SetdoubleAsString(ColumnNames.PayCount, value);
			}
		}

		public virtual string s_Pay_Total
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_Total) ? string.Empty : base.GetdoubleAsString(ColumnNames.Pay_Total);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_Total);
				else
					this.Pay_Total = base.SetdoubleAsString(ColumnNames.Pay_Total, value);
			}
		}

		public virtual string s_Pay_Profit
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_Profit) ? string.Empty : base.GetdoubleAsString(ColumnNames.Pay_Profit);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_Profit);
				else
					this.Pay_Profit = base.SetdoubleAsString(ColumnNames.Pay_Profit, value);
			}
		}

		public virtual string s_Customer_Mobile
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_Mobile) ? string.Empty : base.GetstringAsString(ColumnNames.Customer_Mobile);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_Mobile);
				else
					this.Customer_Mobile = base.SetstringAsString(ColumnNames.Customer_Mobile, value);
			}
		}

		public virtual string s_Bill_CustomerPhone
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_CustomerPhone) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_CustomerPhone);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_CustomerPhone);
				else
					this.Bill_CustomerPhone = base.SetstringAsString(ColumnNames.Bill_CustomerPhone, value);
			}
		}

		public virtual string s_Customer_Name
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_Name) ? string.Empty : base.GetstringAsString(ColumnNames.Customer_Name);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_Name);
				else
					this.Customer_Name = base.SetstringAsString(ColumnNames.Customer_Name, value);
			}
		}

		public virtual string s_Bill_CustomerName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_CustomerName) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_CustomerName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_CustomerName);
				else
					this.Bill_CustomerName = base.SetstringAsString(ColumnNames.Bill_CustomerName, value);
			}
		}

		public virtual string s_Pay_Bank
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_Bank) ? string.Empty : base.GetdoubleAsString(ColumnNames.Pay_Bank);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_Bank);
				else
					this.Pay_Bank = base.SetdoubleAsString(ColumnNames.Pay_Bank, value);
			}
		}

		public virtual string s_Pay_Cash
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Pay_Cash) ? string.Empty : base.GetdoubleAsString(ColumnNames.Pay_Cash);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Pay_Cash);
				else
					this.Pay_Cash = base.SetdoubleAsString(ColumnNames.Pay_Cash, value);
			}
		}

		public virtual string s_Bill_DiscountType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_DiscountType) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_DiscountType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_DiscountType);
				else
					this.Bill_DiscountType = base.SetstringAsString(ColumnNames.Bill_DiscountType, value);
			}
		}

		public virtual string s_Bill_DiscountMoney
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_DiscountMoney) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_DiscountMoney);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_DiscountMoney);
				else
					this.Bill_DiscountMoney = base.SetdoubleAsString(ColumnNames.Bill_DiscountMoney, value);
			}
		}

		public virtual string s_Bill_Type
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Type) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Type);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Type);
				else
					this.Bill_Type = base.SetstringAsString(ColumnNames.Bill_Type, value);
			}
		}

		public virtual string s_Bill_Time
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Time) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Time);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Time);
				else
					this.Bill_Time = base.SetstringAsString(ColumnNames.Bill_Time, value);
			}
		}

		public virtual string s_Bill_Date
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Date) ? string.Empty : base.GetDateTimeAsString(ColumnNames.Bill_Date);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Date);
				else
					this.Bill_Date = base.SetDateTimeAsString(ColumnNames.Bill_Date, value);
			}
		}

		public virtual string s_Bill_Details
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Details) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Details);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Details);
				else
					this.Bill_Details = base.SetstringAsString(ColumnNames.Bill_Details, value);
			}
		}

		public virtual string s_Customer_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_Id) ? string.Empty : base.GetintAsString(ColumnNames.Customer_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_Id);
				else
					this.Customer_Id = base.SetintAsString(ColumnNames.Customer_Id, value);
			}
		}

		public virtual string s_Titel_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Titel_Id) ? string.Empty : base.GetintAsString(ColumnNames.Titel_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Titel_Id);
				else
					this.Titel_Id = base.SetintAsString(ColumnNames.Titel_Id, value);
			}
		}

		public virtual string s_Barcode_Unit
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_Unit) ? string.Empty : base.GetstringAsString(ColumnNames.Barcode_Unit);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_Unit);
				else
					this.Barcode_Unit = base.SetstringAsString(ColumnNames.Barcode_Unit, value);
			}
		}

		public virtual string s_Barcode_PayPrice
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_PayPrice) ? string.Empty : base.GetstringAsString(ColumnNames.Barcode_PayPrice);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_PayPrice);
				else
					this.Barcode_PayPrice = base.SetstringAsString(ColumnNames.Barcode_PayPrice, value);
			}
		}

		public virtual string s_Barcode_BuyPrice
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_BuyPrice) ? string.Empty : base.GetstringAsString(ColumnNames.Barcode_BuyPrice);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_BuyPrice);
				else
					this.Barcode_BuyPrice = base.SetstringAsString(ColumnNames.Barcode_BuyPrice, value);
			}
		}

		public virtual string s_Barcode_Code
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_Code) ? string.Empty : base.GetstringAsString(ColumnNames.Barcode_Code);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_Code);
				else
					this.Barcode_Code = base.SetstringAsString(ColumnNames.Barcode_Code, value);
			}
		}

		public virtual string s_Barcode_Count
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Barcode_Count) ? string.Empty : base.GetstringAsString(ColumnNames.Barcode_Count);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Barcode_Count);
				else
					this.Barcode_Count = base.SetstringAsString(ColumnNames.Barcode_Count, value);
			}
		}

		public virtual string s_Good_TraidName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Good_TraidName) ? string.Empty : base.GetstringAsString(ColumnNames.Good_TraidName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Good_TraidName);
				else
					this.Good_TraidName = base.SetstringAsString(ColumnNames.Good_TraidName, value);
			}
		}

		public virtual string s_Category_Name
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Category_Name) ? string.Empty : base.GetstringAsString(ColumnNames.Category_Name);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Category_Name);
				else
					this.Category_Name = base.SetstringAsString(ColumnNames.Category_Name, value);
			}
		}

		public virtual string s_User_Name
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.User_Name) ? string.Empty : base.GetstringAsString(ColumnNames.User_Name);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.User_Name);
				else
					this.User_Name = base.SetstringAsString(ColumnNames.User_Name, value);
			}
		}

		public virtual string s_Category_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Category_Id) ? string.Empty : base.GetintAsString(ColumnNames.Category_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Category_Id);
				else
					this.Category_Id = base.SetintAsString(ColumnNames.Category_Id, value);
			}
		}

		public virtual string s_Bill_Vat
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Vat) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Vat);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Vat);
				else
					this.Bill_Vat = base.SetdoubleAsString(ColumnNames.Bill_Vat, value);
			}
		}

		public virtual string s_Bill_Vat_Value
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Vat_Value) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Vat_Value);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Vat_Value);
				else
					this.Bill_Vat_Value = base.SetdoubleAsString(ColumnNames.Bill_Vat_Value, value);
			}
		}

		public virtual string s_PayPriceAfterVat
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PayPriceAfterVat) ? string.Empty : base.GetdoubleAsString(ColumnNames.PayPriceAfterVat);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PayPriceAfterVat);
				else
					this.PayPriceAfterVat = base.SetdoubleAsString(ColumnNames.PayPriceAfterVat, value);
			}
		}

		public virtual string s_PayTotalAfterVat
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PayTotalAfterVat) ? string.Empty : base.GetdoubleAsString(ColumnNames.PayTotalAfterVat);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PayTotalAfterVat);
				else
					this.PayTotalAfterVat = base.SetdoubleAsString(ColumnNames.PayTotalAfterVat, value);
			}
		}

		public virtual string s_Customer_VatNumber
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_VatNumber) ? string.Empty : base.GetstringAsString(ColumnNames.Customer_VatNumber);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_VatNumber);
				else
					this.Customer_VatNumber = base.SetstringAsString(ColumnNames.Customer_VatNumber, value);
			}
		}

		public virtual string s_Customer_Pay
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_Pay) ? string.Empty : base.GetstringAsString(ColumnNames.Customer_Pay);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_Pay);
				else
					this.Customer_Pay = base.SetstringAsString(ColumnNames.Customer_Pay, value);
			}
		}

		public virtual string s_Customer_Rest
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Customer_Rest) ? string.Empty : base.GetstringAsString(ColumnNames.Customer_Rest);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Customer_Rest);
				else
					this.Customer_Rest = base.SetstringAsString(ColumnNames.Customer_Rest, value);
			}
		}

		public virtual string s_Bill_Notes
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Notes) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Notes);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Notes);
				else
					this.Bill_Notes = base.SetstringAsString(ColumnNames.Bill_Notes, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Pay_ID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_ID, Parameters.Pay_ID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CustomerBill_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CustomerBill_Id, Parameters.CustomerBill_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_Id, Parameters.Barcode_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Pay_Price
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_Price, Parameters.Pay_Price);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PayCount
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PayCount, Parameters.PayCount);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Pay_Total
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_Total, Parameters.Pay_Total);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Pay_Profit
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_Profit, Parameters.Pay_Profit);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_Mobile
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_Mobile, Parameters.Customer_Mobile);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_CustomerPhone
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_CustomerPhone, Parameters.Bill_CustomerPhone);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_Name
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_Name, Parameters.Customer_Name);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_CustomerName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_CustomerName, Parameters.Bill_CustomerName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Pay_Bank
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_Bank, Parameters.Pay_Bank);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Pay_Cash
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Pay_Cash, Parameters.Pay_Cash);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_DiscountType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_DiscountType, Parameters.Bill_DiscountType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_DiscountMoney
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_DiscountMoney, Parameters.Bill_DiscountMoney);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Type
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Type, Parameters.Bill_Type);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Time
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Time, Parameters.Bill_Time);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Date
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Date, Parameters.Bill_Date);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Details
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Details, Parameters.Bill_Details);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_Id, Parameters.Customer_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Titel_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Titel_Id, Parameters.Titel_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_Unit
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_Unit, Parameters.Barcode_Unit);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_PayPrice
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_PayPrice, Parameters.Barcode_PayPrice);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_BuyPrice
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_BuyPrice, Parameters.Barcode_BuyPrice);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_Code
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_Code, Parameters.Barcode_Code);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Barcode_Count
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Barcode_Count, Parameters.Barcode_Count);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Good_TraidName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Good_TraidName, Parameters.Good_TraidName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Category_Name
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Category_Name, Parameters.Category_Name);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter User_Name
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.User_Name, Parameters.User_Name);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Category_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Category_Id, Parameters.Category_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Vat
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Vat, Parameters.Bill_Vat);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Vat_Value
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Vat_Value, Parameters.Bill_Vat_Value);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PayPriceAfterVat
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PayPriceAfterVat, Parameters.PayPriceAfterVat);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter PayTotalAfterVat
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PayTotalAfterVat, Parameters.PayTotalAfterVat);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_QrCode
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_QrCode, Parameters.Bill_QrCode);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_VatNumber
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_VatNumber, Parameters.Customer_VatNumber);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_Pay
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_Pay, Parameters.Customer_Pay);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Customer_Rest
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Customer_Rest, Parameters.Customer_Rest);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Notes
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Notes, Parameters.Bill_Notes);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Pay_ID
		    {
				get
		        {
					if(_Pay_ID_W == null)
	        	    {
						_Pay_ID_W = TearOff.Pay_ID;
					}
					return _Pay_ID_W;
				}
			}

			public WhereParameter CustomerBill_Id
		    {
				get
		        {
					if(_CustomerBill_Id_W == null)
	        	    {
						_CustomerBill_Id_W = TearOff.CustomerBill_Id;
					}
					return _CustomerBill_Id_W;
				}
			}

			public WhereParameter Barcode_Id
		    {
				get
		        {
					if(_Barcode_Id_W == null)
	        	    {
						_Barcode_Id_W = TearOff.Barcode_Id;
					}
					return _Barcode_Id_W;
				}
			}

			public WhereParameter Pay_Price
		    {
				get
		        {
					if(_Pay_Price_W == null)
	        	    {
						_Pay_Price_W = TearOff.Pay_Price;
					}
					return _Pay_Price_W;
				}
			}

			public WhereParameter PayCount
		    {
				get
		        {
					if(_PayCount_W == null)
	        	    {
						_PayCount_W = TearOff.PayCount;
					}
					return _PayCount_W;
				}
			}

			public WhereParameter Pay_Total
		    {
				get
		        {
					if(_Pay_Total_W == null)
	        	    {
						_Pay_Total_W = TearOff.Pay_Total;
					}
					return _Pay_Total_W;
				}
			}

			public WhereParameter Pay_Profit
		    {
				get
		        {
					if(_Pay_Profit_W == null)
	        	    {
						_Pay_Profit_W = TearOff.Pay_Profit;
					}
					return _Pay_Profit_W;
				}
			}

			public WhereParameter Customer_Mobile
		    {
				get
		        {
					if(_Customer_Mobile_W == null)
	        	    {
						_Customer_Mobile_W = TearOff.Customer_Mobile;
					}
					return _Customer_Mobile_W;
				}
			}

			public WhereParameter Bill_CustomerPhone
		    {
				get
		        {
					if(_Bill_CustomerPhone_W == null)
	        	    {
						_Bill_CustomerPhone_W = TearOff.Bill_CustomerPhone;
					}
					return _Bill_CustomerPhone_W;
				}
			}

			public WhereParameter Customer_Name
		    {
				get
		        {
					if(_Customer_Name_W == null)
	        	    {
						_Customer_Name_W = TearOff.Customer_Name;
					}
					return _Customer_Name_W;
				}
			}

			public WhereParameter Bill_CustomerName
		    {
				get
		        {
					if(_Bill_CustomerName_W == null)
	        	    {
						_Bill_CustomerName_W = TearOff.Bill_CustomerName;
					}
					return _Bill_CustomerName_W;
				}
			}

			public WhereParameter Pay_Bank
		    {
				get
		        {
					if(_Pay_Bank_W == null)
	        	    {
						_Pay_Bank_W = TearOff.Pay_Bank;
					}
					return _Pay_Bank_W;
				}
			}

			public WhereParameter Pay_Cash
		    {
				get
		        {
					if(_Pay_Cash_W == null)
	        	    {
						_Pay_Cash_W = TearOff.Pay_Cash;
					}
					return _Pay_Cash_W;
				}
			}

			public WhereParameter Bill_DiscountType
		    {
				get
		        {
					if(_Bill_DiscountType_W == null)
	        	    {
						_Bill_DiscountType_W = TearOff.Bill_DiscountType;
					}
					return _Bill_DiscountType_W;
				}
			}

			public WhereParameter Bill_DiscountMoney
		    {
				get
		        {
					if(_Bill_DiscountMoney_W == null)
	        	    {
						_Bill_DiscountMoney_W = TearOff.Bill_DiscountMoney;
					}
					return _Bill_DiscountMoney_W;
				}
			}

			public WhereParameter Bill_Type
		    {
				get
		        {
					if(_Bill_Type_W == null)
	        	    {
						_Bill_Type_W = TearOff.Bill_Type;
					}
					return _Bill_Type_W;
				}
			}

			public WhereParameter Bill_Time
		    {
				get
		        {
					if(_Bill_Time_W == null)
	        	    {
						_Bill_Time_W = TearOff.Bill_Time;
					}
					return _Bill_Time_W;
				}
			}

			public WhereParameter Bill_Date
		    {
				get
		        {
					if(_Bill_Date_W == null)
	        	    {
						_Bill_Date_W = TearOff.Bill_Date;
					}
					return _Bill_Date_W;
				}
			}

			public WhereParameter Bill_Details
		    {
				get
		        {
					if(_Bill_Details_W == null)
	        	    {
						_Bill_Details_W = TearOff.Bill_Details;
					}
					return _Bill_Details_W;
				}
			}

			public WhereParameter Customer_Id
		    {
				get
		        {
					if(_Customer_Id_W == null)
	        	    {
						_Customer_Id_W = TearOff.Customer_Id;
					}
					return _Customer_Id_W;
				}
			}

			public WhereParameter Titel_Id
		    {
				get
		        {
					if(_Titel_Id_W == null)
	        	    {
						_Titel_Id_W = TearOff.Titel_Id;
					}
					return _Titel_Id_W;
				}
			}

			public WhereParameter Barcode_Unit
		    {
				get
		        {
					if(_Barcode_Unit_W == null)
	        	    {
						_Barcode_Unit_W = TearOff.Barcode_Unit;
					}
					return _Barcode_Unit_W;
				}
			}

			public WhereParameter Barcode_PayPrice
		    {
				get
		        {
					if(_Barcode_PayPrice_W == null)
	        	    {
						_Barcode_PayPrice_W = TearOff.Barcode_PayPrice;
					}
					return _Barcode_PayPrice_W;
				}
			}

			public WhereParameter Barcode_BuyPrice
		    {
				get
		        {
					if(_Barcode_BuyPrice_W == null)
	        	    {
						_Barcode_BuyPrice_W = TearOff.Barcode_BuyPrice;
					}
					return _Barcode_BuyPrice_W;
				}
			}

			public WhereParameter Barcode_Code
		    {
				get
		        {
					if(_Barcode_Code_W == null)
	        	    {
						_Barcode_Code_W = TearOff.Barcode_Code;
					}
					return _Barcode_Code_W;
				}
			}

			public WhereParameter Barcode_Count
		    {
				get
		        {
					if(_Barcode_Count_W == null)
	        	    {
						_Barcode_Count_W = TearOff.Barcode_Count;
					}
					return _Barcode_Count_W;
				}
			}

			public WhereParameter Good_TraidName
		    {
				get
		        {
					if(_Good_TraidName_W == null)
	        	    {
						_Good_TraidName_W = TearOff.Good_TraidName;
					}
					return _Good_TraidName_W;
				}
			}

			public WhereParameter Category_Name
		    {
				get
		        {
					if(_Category_Name_W == null)
	        	    {
						_Category_Name_W = TearOff.Category_Name;
					}
					return _Category_Name_W;
				}
			}

			public WhereParameter User_Name
		    {
				get
		        {
					if(_User_Name_W == null)
	        	    {
						_User_Name_W = TearOff.User_Name;
					}
					return _User_Name_W;
				}
			}

			public WhereParameter Category_Id
		    {
				get
		        {
					if(_Category_Id_W == null)
	        	    {
						_Category_Id_W = TearOff.Category_Id;
					}
					return _Category_Id_W;
				}
			}

			public WhereParameter Bill_Vat
		    {
				get
		        {
					if(_Bill_Vat_W == null)
	        	    {
						_Bill_Vat_W = TearOff.Bill_Vat;
					}
					return _Bill_Vat_W;
				}
			}

			public WhereParameter Bill_Vat_Value
		    {
				get
		        {
					if(_Bill_Vat_Value_W == null)
	        	    {
						_Bill_Vat_Value_W = TearOff.Bill_Vat_Value;
					}
					return _Bill_Vat_Value_W;
				}
			}

			public WhereParameter PayPriceAfterVat
		    {
				get
		        {
					if(_PayPriceAfterVat_W == null)
	        	    {
						_PayPriceAfterVat_W = TearOff.PayPriceAfterVat;
					}
					return _PayPriceAfterVat_W;
				}
			}

			public WhereParameter PayTotalAfterVat
		    {
				get
		        {
					if(_PayTotalAfterVat_W == null)
	        	    {
						_PayTotalAfterVat_W = TearOff.PayTotalAfterVat;
					}
					return _PayTotalAfterVat_W;
				}
			}

			public WhereParameter Bill_QrCode
		    {
				get
		        {
					if(_Bill_QrCode_W == null)
	        	    {
						_Bill_QrCode_W = TearOff.Bill_QrCode;
					}
					return _Bill_QrCode_W;
				}
			}

			public WhereParameter Customer_VatNumber
		    {
				get
		        {
					if(_Customer_VatNumber_W == null)
	        	    {
						_Customer_VatNumber_W = TearOff.Customer_VatNumber;
					}
					return _Customer_VatNumber_W;
				}
			}

			public WhereParameter Customer_Pay
		    {
				get
		        {
					if(_Customer_Pay_W == null)
	        	    {
						_Customer_Pay_W = TearOff.Customer_Pay;
					}
					return _Customer_Pay_W;
				}
			}

			public WhereParameter Customer_Rest
		    {
				get
		        {
					if(_Customer_Rest_W == null)
	        	    {
						_Customer_Rest_W = TearOff.Customer_Rest;
					}
					return _Customer_Rest_W;
				}
			}

			public WhereParameter Bill_Notes
		    {
				get
		        {
					if(_Bill_Notes_W == null)
	        	    {
						_Bill_Notes_W = TearOff.Bill_Notes;
					}
					return _Bill_Notes_W;
				}
			}

			private WhereParameter _Pay_ID_W = null;
			private WhereParameter _CustomerBill_Id_W = null;
			private WhereParameter _Barcode_Id_W = null;
			private WhereParameter _Pay_Price_W = null;
			private WhereParameter _PayCount_W = null;
			private WhereParameter _Pay_Total_W = null;
			private WhereParameter _Pay_Profit_W = null;
			private WhereParameter _Customer_Mobile_W = null;
			private WhereParameter _Bill_CustomerPhone_W = null;
			private WhereParameter _Customer_Name_W = null;
			private WhereParameter _Bill_CustomerName_W = null;
			private WhereParameter _Pay_Bank_W = null;
			private WhereParameter _Pay_Cash_W = null;
			private WhereParameter _Bill_DiscountType_W = null;
			private WhereParameter _Bill_DiscountMoney_W = null;
			private WhereParameter _Bill_Type_W = null;
			private WhereParameter _Bill_Time_W = null;
			private WhereParameter _Bill_Date_W = null;
			private WhereParameter _Bill_Details_W = null;
			private WhereParameter _Customer_Id_W = null;
			private WhereParameter _Titel_Id_W = null;
			private WhereParameter _Barcode_Unit_W = null;
			private WhereParameter _Barcode_PayPrice_W = null;
			private WhereParameter _Barcode_BuyPrice_W = null;
			private WhereParameter _Barcode_Code_W = null;
			private WhereParameter _Barcode_Count_W = null;
			private WhereParameter _Good_TraidName_W = null;
			private WhereParameter _Category_Name_W = null;
			private WhereParameter _User_Name_W = null;
			private WhereParameter _Category_Id_W = null;
			private WhereParameter _Bill_Vat_W = null;
			private WhereParameter _Bill_Vat_Value_W = null;
			private WhereParameter _PayPriceAfterVat_W = null;
			private WhereParameter _PayTotalAfterVat_W = null;
			private WhereParameter _Bill_QrCode_W = null;
			private WhereParameter _Customer_VatNumber_W = null;
			private WhereParameter _Customer_Pay_W = null;
			private WhereParameter _Customer_Rest_W = null;
			private WhereParameter _Bill_Notes_W = null;

			public void WhereClauseReset()
			{
				_Pay_ID_W = null;
				_CustomerBill_Id_W = null;
				_Barcode_Id_W = null;
				_Pay_Price_W = null;
				_PayCount_W = null;
				_Pay_Total_W = null;
				_Pay_Profit_W = null;
				_Customer_Mobile_W = null;
				_Bill_CustomerPhone_W = null;
				_Customer_Name_W = null;
				_Bill_CustomerName_W = null;
				_Pay_Bank_W = null;
				_Pay_Cash_W = null;
				_Bill_DiscountType_W = null;
				_Bill_DiscountMoney_W = null;
				_Bill_Type_W = null;
				_Bill_Time_W = null;
				_Bill_Date_W = null;
				_Bill_Details_W = null;
				_Customer_Id_W = null;
				_Titel_Id_W = null;
				_Barcode_Unit_W = null;
				_Barcode_PayPrice_W = null;
				_Barcode_BuyPrice_W = null;
				_Barcode_Code_W = null;
				_Barcode_Count_W = null;
				_Good_TraidName_W = null;
				_Category_Name_W = null;
				_User_Name_W = null;
				_Category_Id_W = null;
				_Bill_Vat_W = null;
				_Bill_Vat_Value_W = null;
				_PayPriceAfterVat_W = null;
				_PayTotalAfterVat_W = null;
				_Bill_QrCode_W = null;
				_Customer_VatNumber_W = null;
				_Customer_Pay_W = null;
				_Customer_Rest_W = null;
				_Bill_Notes_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Pay_ID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_ID, Parameters.Pay_ID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CustomerBill_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CustomerBill_Id, Parameters.CustomerBill_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_Id, Parameters.Barcode_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Pay_Price
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_Price, Parameters.Pay_Price);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PayCount
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PayCount, Parameters.PayCount);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Pay_Total
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_Total, Parameters.Pay_Total);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Pay_Profit
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_Profit, Parameters.Pay_Profit);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_Mobile
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_Mobile, Parameters.Customer_Mobile);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_CustomerPhone
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_CustomerPhone, Parameters.Bill_CustomerPhone);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_Name
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_Name, Parameters.Customer_Name);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_CustomerName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_CustomerName, Parameters.Bill_CustomerName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Pay_Bank
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_Bank, Parameters.Pay_Bank);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Pay_Cash
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Pay_Cash, Parameters.Pay_Cash);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_DiscountType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_DiscountType, Parameters.Bill_DiscountType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_DiscountMoney
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_DiscountMoney, Parameters.Bill_DiscountMoney);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Type
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Type, Parameters.Bill_Type);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Time
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Time, Parameters.Bill_Time);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Date
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Date, Parameters.Bill_Date);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Details
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Details, Parameters.Bill_Details);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_Id, Parameters.Customer_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Titel_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Titel_Id, Parameters.Titel_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_Unit
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_Unit, Parameters.Barcode_Unit);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_PayPrice
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_PayPrice, Parameters.Barcode_PayPrice);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_BuyPrice
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_BuyPrice, Parameters.Barcode_BuyPrice);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_Code
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_Code, Parameters.Barcode_Code);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Barcode_Count
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Barcode_Count, Parameters.Barcode_Count);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Good_TraidName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Good_TraidName, Parameters.Good_TraidName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Category_Name
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Category_Name, Parameters.Category_Name);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter User_Name
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.User_Name, Parameters.User_Name);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Category_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Category_Id, Parameters.Category_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Vat
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Vat, Parameters.Bill_Vat);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Vat_Value
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Vat_Value, Parameters.Bill_Vat_Value);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PayPriceAfterVat
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PayPriceAfterVat, Parameters.PayPriceAfterVat);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter PayTotalAfterVat
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PayTotalAfterVat, Parameters.PayTotalAfterVat);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_QrCode
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_QrCode, Parameters.Bill_QrCode);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_VatNumber
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_VatNumber, Parameters.Customer_VatNumber);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_Pay
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_Pay, Parameters.Customer_Pay);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Customer_Rest
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Customer_Rest, Parameters.Customer_Rest);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Notes
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Notes, Parameters.Bill_Notes);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Pay_ID
		    {
				get
		        {
					if(_Pay_ID_W == null)
	        	    {
						_Pay_ID_W = TearOff.Pay_ID;
					}
					return _Pay_ID_W;
				}
			}

			public AggregateParameter CustomerBill_Id
		    {
				get
		        {
					if(_CustomerBill_Id_W == null)
	        	    {
						_CustomerBill_Id_W = TearOff.CustomerBill_Id;
					}
					return _CustomerBill_Id_W;
				}
			}

			public AggregateParameter Barcode_Id
		    {
				get
		        {
					if(_Barcode_Id_W == null)
	        	    {
						_Barcode_Id_W = TearOff.Barcode_Id;
					}
					return _Barcode_Id_W;
				}
			}

			public AggregateParameter Pay_Price
		    {
				get
		        {
					if(_Pay_Price_W == null)
	        	    {
						_Pay_Price_W = TearOff.Pay_Price;
					}
					return _Pay_Price_W;
				}
			}

			public AggregateParameter PayCount
		    {
				get
		        {
					if(_PayCount_W == null)
	        	    {
						_PayCount_W = TearOff.PayCount;
					}
					return _PayCount_W;
				}
			}

			public AggregateParameter Pay_Total
		    {
				get
		        {
					if(_Pay_Total_W == null)
	        	    {
						_Pay_Total_W = TearOff.Pay_Total;
					}
					return _Pay_Total_W;
				}
			}

			public AggregateParameter Pay_Profit
		    {
				get
		        {
					if(_Pay_Profit_W == null)
	        	    {
						_Pay_Profit_W = TearOff.Pay_Profit;
					}
					return _Pay_Profit_W;
				}
			}

			public AggregateParameter Customer_Mobile
		    {
				get
		        {
					if(_Customer_Mobile_W == null)
	        	    {
						_Customer_Mobile_W = TearOff.Customer_Mobile;
					}
					return _Customer_Mobile_W;
				}
			}

			public AggregateParameter Bill_CustomerPhone
		    {
				get
		        {
					if(_Bill_CustomerPhone_W == null)
	        	    {
						_Bill_CustomerPhone_W = TearOff.Bill_CustomerPhone;
					}
					return _Bill_CustomerPhone_W;
				}
			}

			public AggregateParameter Customer_Name
		    {
				get
		        {
					if(_Customer_Name_W == null)
	        	    {
						_Customer_Name_W = TearOff.Customer_Name;
					}
					return _Customer_Name_W;
				}
			}

			public AggregateParameter Bill_CustomerName
		    {
				get
		        {
					if(_Bill_CustomerName_W == null)
	        	    {
						_Bill_CustomerName_W = TearOff.Bill_CustomerName;
					}
					return _Bill_CustomerName_W;
				}
			}

			public AggregateParameter Pay_Bank
		    {
				get
		        {
					if(_Pay_Bank_W == null)
	        	    {
						_Pay_Bank_W = TearOff.Pay_Bank;
					}
					return _Pay_Bank_W;
				}
			}

			public AggregateParameter Pay_Cash
		    {
				get
		        {
					if(_Pay_Cash_W == null)
	        	    {
						_Pay_Cash_W = TearOff.Pay_Cash;
					}
					return _Pay_Cash_W;
				}
			}

			public AggregateParameter Bill_DiscountType
		    {
				get
		        {
					if(_Bill_DiscountType_W == null)
	        	    {
						_Bill_DiscountType_W = TearOff.Bill_DiscountType;
					}
					return _Bill_DiscountType_W;
				}
			}

			public AggregateParameter Bill_DiscountMoney
		    {
				get
		        {
					if(_Bill_DiscountMoney_W == null)
	        	    {
						_Bill_DiscountMoney_W = TearOff.Bill_DiscountMoney;
					}
					return _Bill_DiscountMoney_W;
				}
			}

			public AggregateParameter Bill_Type
		    {
				get
		        {
					if(_Bill_Type_W == null)
	        	    {
						_Bill_Type_W = TearOff.Bill_Type;
					}
					return _Bill_Type_W;
				}
			}

			public AggregateParameter Bill_Time
		    {
				get
		        {
					if(_Bill_Time_W == null)
	        	    {
						_Bill_Time_W = TearOff.Bill_Time;
					}
					return _Bill_Time_W;
				}
			}

			public AggregateParameter Bill_Date
		    {
				get
		        {
					if(_Bill_Date_W == null)
	        	    {
						_Bill_Date_W = TearOff.Bill_Date;
					}
					return _Bill_Date_W;
				}
			}

			public AggregateParameter Bill_Details
		    {
				get
		        {
					if(_Bill_Details_W == null)
	        	    {
						_Bill_Details_W = TearOff.Bill_Details;
					}
					return _Bill_Details_W;
				}
			}

			public AggregateParameter Customer_Id
		    {
				get
		        {
					if(_Customer_Id_W == null)
	        	    {
						_Customer_Id_W = TearOff.Customer_Id;
					}
					return _Customer_Id_W;
				}
			}

			public AggregateParameter Titel_Id
		    {
				get
		        {
					if(_Titel_Id_W == null)
	        	    {
						_Titel_Id_W = TearOff.Titel_Id;
					}
					return _Titel_Id_W;
				}
			}

			public AggregateParameter Barcode_Unit
		    {
				get
		        {
					if(_Barcode_Unit_W == null)
	        	    {
						_Barcode_Unit_W = TearOff.Barcode_Unit;
					}
					return _Barcode_Unit_W;
				}
			}

			public AggregateParameter Barcode_PayPrice
		    {
				get
		        {
					if(_Barcode_PayPrice_W == null)
	        	    {
						_Barcode_PayPrice_W = TearOff.Barcode_PayPrice;
					}
					return _Barcode_PayPrice_W;
				}
			}

			public AggregateParameter Barcode_BuyPrice
		    {
				get
		        {
					if(_Barcode_BuyPrice_W == null)
	        	    {
						_Barcode_BuyPrice_W = TearOff.Barcode_BuyPrice;
					}
					return _Barcode_BuyPrice_W;
				}
			}

			public AggregateParameter Barcode_Code
		    {
				get
		        {
					if(_Barcode_Code_W == null)
	        	    {
						_Barcode_Code_W = TearOff.Barcode_Code;
					}
					return _Barcode_Code_W;
				}
			}

			public AggregateParameter Barcode_Count
		    {
				get
		        {
					if(_Barcode_Count_W == null)
	        	    {
						_Barcode_Count_W = TearOff.Barcode_Count;
					}
					return _Barcode_Count_W;
				}
			}

			public AggregateParameter Good_TraidName
		    {
				get
		        {
					if(_Good_TraidName_W == null)
	        	    {
						_Good_TraidName_W = TearOff.Good_TraidName;
					}
					return _Good_TraidName_W;
				}
			}

			public AggregateParameter Category_Name
		    {
				get
		        {
					if(_Category_Name_W == null)
	        	    {
						_Category_Name_W = TearOff.Category_Name;
					}
					return _Category_Name_W;
				}
			}

			public AggregateParameter User_Name
		    {
				get
		        {
					if(_User_Name_W == null)
	        	    {
						_User_Name_W = TearOff.User_Name;
					}
					return _User_Name_W;
				}
			}

			public AggregateParameter Category_Id
		    {
				get
		        {
					if(_Category_Id_W == null)
	        	    {
						_Category_Id_W = TearOff.Category_Id;
					}
					return _Category_Id_W;
				}
			}

			public AggregateParameter Bill_Vat
		    {
				get
		        {
					if(_Bill_Vat_W == null)
	        	    {
						_Bill_Vat_W = TearOff.Bill_Vat;
					}
					return _Bill_Vat_W;
				}
			}

			public AggregateParameter Bill_Vat_Value
		    {
				get
		        {
					if(_Bill_Vat_Value_W == null)
	        	    {
						_Bill_Vat_Value_W = TearOff.Bill_Vat_Value;
					}
					return _Bill_Vat_Value_W;
				}
			}

			public AggregateParameter PayPriceAfterVat
		    {
				get
		        {
					if(_PayPriceAfterVat_W == null)
	        	    {
						_PayPriceAfterVat_W = TearOff.PayPriceAfterVat;
					}
					return _PayPriceAfterVat_W;
				}
			}

			public AggregateParameter PayTotalAfterVat
		    {
				get
		        {
					if(_PayTotalAfterVat_W == null)
	        	    {
						_PayTotalAfterVat_W = TearOff.PayTotalAfterVat;
					}
					return _PayTotalAfterVat_W;
				}
			}

			public AggregateParameter Bill_QrCode
		    {
				get
		        {
					if(_Bill_QrCode_W == null)
	        	    {
						_Bill_QrCode_W = TearOff.Bill_QrCode;
					}
					return _Bill_QrCode_W;
				}
			}

			public AggregateParameter Customer_VatNumber
		    {
				get
		        {
					if(_Customer_VatNumber_W == null)
	        	    {
						_Customer_VatNumber_W = TearOff.Customer_VatNumber;
					}
					return _Customer_VatNumber_W;
				}
			}

			public AggregateParameter Customer_Pay
		    {
				get
		        {
					if(_Customer_Pay_W == null)
	        	    {
						_Customer_Pay_W = TearOff.Customer_Pay;
					}
					return _Customer_Pay_W;
				}
			}

			public AggregateParameter Customer_Rest
		    {
				get
		        {
					if(_Customer_Rest_W == null)
	        	    {
						_Customer_Rest_W = TearOff.Customer_Rest;
					}
					return _Customer_Rest_W;
				}
			}

			public AggregateParameter Bill_Notes
		    {
				get
		        {
					if(_Bill_Notes_W == null)
	        	    {
						_Bill_Notes_W = TearOff.Bill_Notes;
					}
					return _Bill_Notes_W;
				}
			}

			private AggregateParameter _Pay_ID_W = null;
			private AggregateParameter _CustomerBill_Id_W = null;
			private AggregateParameter _Barcode_Id_W = null;
			private AggregateParameter _Pay_Price_W = null;
			private AggregateParameter _PayCount_W = null;
			private AggregateParameter _Pay_Total_W = null;
			private AggregateParameter _Pay_Profit_W = null;
			private AggregateParameter _Customer_Mobile_W = null;
			private AggregateParameter _Bill_CustomerPhone_W = null;
			private AggregateParameter _Customer_Name_W = null;
			private AggregateParameter _Bill_CustomerName_W = null;
			private AggregateParameter _Pay_Bank_W = null;
			private AggregateParameter _Pay_Cash_W = null;
			private AggregateParameter _Bill_DiscountType_W = null;
			private AggregateParameter _Bill_DiscountMoney_W = null;
			private AggregateParameter _Bill_Type_W = null;
			private AggregateParameter _Bill_Time_W = null;
			private AggregateParameter _Bill_Date_W = null;
			private AggregateParameter _Bill_Details_W = null;
			private AggregateParameter _Customer_Id_W = null;
			private AggregateParameter _Titel_Id_W = null;
			private AggregateParameter _Barcode_Unit_W = null;
			private AggregateParameter _Barcode_PayPrice_W = null;
			private AggregateParameter _Barcode_BuyPrice_W = null;
			private AggregateParameter _Barcode_Code_W = null;
			private AggregateParameter _Barcode_Count_W = null;
			private AggregateParameter _Good_TraidName_W = null;
			private AggregateParameter _Category_Name_W = null;
			private AggregateParameter _User_Name_W = null;
			private AggregateParameter _Category_Id_W = null;
			private AggregateParameter _Bill_Vat_W = null;
			private AggregateParameter _Bill_Vat_Value_W = null;
			private AggregateParameter _PayPriceAfterVat_W = null;
			private AggregateParameter _PayTotalAfterVat_W = null;
			private AggregateParameter _Bill_QrCode_W = null;
			private AggregateParameter _Customer_VatNumber_W = null;
			private AggregateParameter _Customer_Pay_W = null;
			private AggregateParameter _Customer_Rest_W = null;
			private AggregateParameter _Bill_Notes_W = null;

			public void AggregateClauseReset()
			{
				_Pay_ID_W = null;
				_CustomerBill_Id_W = null;
				_Barcode_Id_W = null;
				_Pay_Price_W = null;
				_PayCount_W = null;
				_Pay_Total_W = null;
				_Pay_Profit_W = null;
				_Customer_Mobile_W = null;
				_Bill_CustomerPhone_W = null;
				_Customer_Name_W = null;
				_Bill_CustomerName_W = null;
				_Pay_Bank_W = null;
				_Pay_Cash_W = null;
				_Bill_DiscountType_W = null;
				_Bill_DiscountMoney_W = null;
				_Bill_Type_W = null;
				_Bill_Time_W = null;
				_Bill_Date_W = null;
				_Bill_Details_W = null;
				_Customer_Id_W = null;
				_Titel_Id_W = null;
				_Barcode_Unit_W = null;
				_Barcode_PayPrice_W = null;
				_Barcode_BuyPrice_W = null;
				_Barcode_Code_W = null;
				_Barcode_Count_W = null;
				_Good_TraidName_W = null;
				_Category_Name_W = null;
				_User_Name_W = null;
				_Category_Id_W = null;
				_Bill_Vat_W = null;
				_Bill_Vat_Value_W = null;
				_PayPriceAfterVat_W = null;
				_PayTotalAfterVat_W = null;
				_Bill_QrCode_W = null;
				_Customer_VatNumber_W = null;
				_Customer_Pay_W = null;
				_Customer_Rest_W = null;
				_Bill_Notes_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}

/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MyPro
{
	public class ViewGoodsSearch : SqlClientEntity
	{
		public ViewGoodsSearch()
		{
			this.QuerySource = "ViewGoodsSearch";
			this.MappingName = "ViewGoodsSearch";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Title_ID
			{
				get
				{
					return new SqlParameter("@Title_ID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Category_Id
			{
				get
				{
					return new SqlParameter("@Category_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Good_FirstDate
			{
				get
				{
					return new SqlParameter("@Good_FirstDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter Good_CurrentCount
			{
				get
				{
					return new SqlParameter("@Good_CurrentCount", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Good_TraidName
			{
				get
				{
					return new SqlParameter("@Good_TraidName", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Part1
			{
				get
				{
					return new SqlParameter("@Part1", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Part2
			{
				get
				{
					return new SqlParameter("@Part2", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Part3
			{
				get
				{
					return new SqlParameter("@Part3", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Part4
			{
				get
				{
					return new SqlParameter("@Part4", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Part5
			{
				get
				{
					return new SqlParameter("@Part5", SqlDbType.NVarChar, 1073741823);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Title_ID = "Title_ID";
            public const string Category_Id = "Category_Id";
            public const string Good_FirstDate = "Good_FirstDate";
            public const string Good_CurrentCount = "Good_CurrentCount";
            public const string Good_TraidName = "Good_TraidName";
            public const string Part1 = "Part1";
            public const string Part2 = "Part2";
            public const string Part3 = "Part3";
            public const string Part4 = "Part4";
            public const string Part5 = "Part5";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Title_ID] = ViewGoodsSearch.PropertyNames.Title_ID;
					ht[Category_Id] = ViewGoodsSearch.PropertyNames.Category_Id;
					ht[Good_FirstDate] = ViewGoodsSearch.PropertyNames.Good_FirstDate;
					ht[Good_CurrentCount] = ViewGoodsSearch.PropertyNames.Good_CurrentCount;
					ht[Good_TraidName] = ViewGoodsSearch.PropertyNames.Good_TraidName;
					ht[Part1] = ViewGoodsSearch.PropertyNames.Part1;
					ht[Part2] = ViewGoodsSearch.PropertyNames.Part2;
					ht[Part3] = ViewGoodsSearch.PropertyNames.Part3;
					ht[Part4] = ViewGoodsSearch.PropertyNames.Part4;
					ht[Part5] = ViewGoodsSearch.PropertyNames.Part5;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Title_ID = "Title_ID";
            public const string Category_Id = "Category_Id";
            public const string Good_FirstDate = "Good_FirstDate";
            public const string Good_CurrentCount = "Good_CurrentCount";
            public const string Good_TraidName = "Good_TraidName";
            public const string Part1 = "Part1";
            public const string Part2 = "Part2";
            public const string Part3 = "Part3";
            public const string Part4 = "Part4";
            public const string Part5 = "Part5";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Title_ID] = ViewGoodsSearch.ColumnNames.Title_ID;
					ht[Category_Id] = ViewGoodsSearch.ColumnNames.Category_Id;
					ht[Good_FirstDate] = ViewGoodsSearch.ColumnNames.Good_FirstDate;
					ht[Good_CurrentCount] = ViewGoodsSearch.ColumnNames.Good_CurrentCount;
					ht[Good_TraidName] = ViewGoodsSearch.ColumnNames.Good_TraidName;
					ht[Part1] = ViewGoodsSearch.ColumnNames.Part1;
					ht[Part2] = ViewGoodsSearch.ColumnNames.Part2;
					ht[Part3] = ViewGoodsSearch.ColumnNames.Part3;
					ht[Part4] = ViewGoodsSearch.ColumnNames.Part4;
					ht[Part5] = ViewGoodsSearch.ColumnNames.Part5;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Title_ID = "s_Title_ID";
            public const string Category_Id = "s_Category_Id";
            public const string Good_FirstDate = "s_Good_FirstDate";
            public const string Good_CurrentCount = "s_Good_CurrentCount";
            public const string Good_TraidName = "s_Good_TraidName";
            public const string Part1 = "s_Part1";
            public const string Part2 = "s_Part2";
            public const string Part3 = "s_Part3";
            public const string Part4 = "s_Part4";
            public const string Part5 = "s_Part5";

		}
		#endregion	
		
		#region Properties
			public virtual int Title_ID
	    {
			get
	        {
				return base.Getint(ColumnNames.Title_ID);
			}
			set
	        {
				base.Setint(ColumnNames.Title_ID, value);
			}
		}

		public virtual int Category_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Category_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Category_Id, value);
			}
		}

		public virtual DateTime Good_FirstDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.Good_FirstDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.Good_FirstDate, value);
			}
		}

		public virtual double Good_CurrentCount
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Good_CurrentCount);
			}
			set
	        {
				base.Setdouble(ColumnNames.Good_CurrentCount, value);
			}
		}

		public virtual string Good_TraidName
	    {
			get
	        {
				return base.Getstring(ColumnNames.Good_TraidName);
			}
			set
	        {
				base.Setstring(ColumnNames.Good_TraidName, value);
			}
		}

		public virtual string Part1
	    {
			get
	        {
				return base.Getstring(ColumnNames.Part1);
			}
			set
	        {
				base.Setstring(ColumnNames.Part1, value);
			}
		}

		public virtual string Part2
	    {
			get
	        {
				return base.Getstring(ColumnNames.Part2);
			}
			set
	        {
				base.Setstring(ColumnNames.Part2, value);
			}
		}

		public virtual string Part3
	    {
			get
	        {
				return base.Getstring(ColumnNames.Part3);
			}
			set
	        {
				base.Setstring(ColumnNames.Part3, value);
			}
		}

		public virtual string Part4
	    {
			get
	        {
				return base.Getstring(ColumnNames.Part4);
			}
			set
	        {
				base.Setstring(ColumnNames.Part4, value);
			}
		}

		public virtual string Part5
	    {
			get
	        {
				return base.Getstring(ColumnNames.Part5);
			}
			set
	        {
				base.Setstring(ColumnNames.Part5, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Title_ID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Title_ID) ? string.Empty : base.GetintAsString(ColumnNames.Title_ID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Title_ID);
				else
					this.Title_ID = base.SetintAsString(ColumnNames.Title_ID, value);
			}
		}

		public virtual string s_Category_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Category_Id) ? string.Empty : base.GetintAsString(ColumnNames.Category_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Category_Id);
				else
					this.Category_Id = base.SetintAsString(ColumnNames.Category_Id, value);
			}
		}

		public virtual string s_Good_FirstDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Good_FirstDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.Good_FirstDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Good_FirstDate);
				else
					this.Good_FirstDate = base.SetDateTimeAsString(ColumnNames.Good_FirstDate, value);
			}
		}

		public virtual string s_Good_CurrentCount
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Good_CurrentCount) ? string.Empty : base.GetdoubleAsString(ColumnNames.Good_CurrentCount);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Good_CurrentCount);
				else
					this.Good_CurrentCount = base.SetdoubleAsString(ColumnNames.Good_CurrentCount, value);
			}
		}

		public virtual string s_Good_TraidName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Good_TraidName) ? string.Empty : base.GetstringAsString(ColumnNames.Good_TraidName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Good_TraidName);
				else
					this.Good_TraidName = base.SetstringAsString(ColumnNames.Good_TraidName, value);
			}
		}

		public virtual string s_Part1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Part1) ? string.Empty : base.GetstringAsString(ColumnNames.Part1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Part1);
				else
					this.Part1 = base.SetstringAsString(ColumnNames.Part1, value);
			}
		}

		public virtual string s_Part2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Part2) ? string.Empty : base.GetstringAsString(ColumnNames.Part2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Part2);
				else
					this.Part2 = base.SetstringAsString(ColumnNames.Part2, value);
			}
		}

		public virtual string s_Part3
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Part3) ? string.Empty : base.GetstringAsString(ColumnNames.Part3);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Part3);
				else
					this.Part3 = base.SetstringAsString(ColumnNames.Part3, value);
			}
		}

		public virtual string s_Part4
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Part4) ? string.Empty : base.GetstringAsString(ColumnNames.Part4);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Part4);
				else
					this.Part4 = base.SetstringAsString(ColumnNames.Part4, value);
			}
		}

		public virtual string s_Part5
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Part5) ? string.Empty : base.GetstringAsString(ColumnNames.Part5);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Part5);
				else
					this.Part5 = base.SetstringAsString(ColumnNames.Part5, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Title_ID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Title_ID, Parameters.Title_ID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Category_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Category_Id, Parameters.Category_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Good_FirstDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Good_FirstDate, Parameters.Good_FirstDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Good_CurrentCount
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Good_CurrentCount, Parameters.Good_CurrentCount);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Good_TraidName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Good_TraidName, Parameters.Good_TraidName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Part1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Part1, Parameters.Part1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Part2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Part2, Parameters.Part2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Part3
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Part3, Parameters.Part3);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Part4
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Part4, Parameters.Part4);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Part5
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Part5, Parameters.Part5);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Title_ID
		    {
				get
		        {
					if(_Title_ID_W == null)
	        	    {
						_Title_ID_W = TearOff.Title_ID;
					}
					return _Title_ID_W;
				}
			}

			public WhereParameter Category_Id
		    {
				get
		        {
					if(_Category_Id_W == null)
	        	    {
						_Category_Id_W = TearOff.Category_Id;
					}
					return _Category_Id_W;
				}
			}

			public WhereParameter Good_FirstDate
		    {
				get
		        {
					if(_Good_FirstDate_W == null)
	        	    {
						_Good_FirstDate_W = TearOff.Good_FirstDate;
					}
					return _Good_FirstDate_W;
				}
			}

			public WhereParameter Good_CurrentCount
		    {
				get
		        {
					if(_Good_CurrentCount_W == null)
	        	    {
						_Good_CurrentCount_W = TearOff.Good_CurrentCount;
					}
					return _Good_CurrentCount_W;
				}
			}

			public WhereParameter Good_TraidName
		    {
				get
		        {
					if(_Good_TraidName_W == null)
	        	    {
						_Good_TraidName_W = TearOff.Good_TraidName;
					}
					return _Good_TraidName_W;
				}
			}

			public WhereParameter Part1
		    {
				get
		        {
					if(_Part1_W == null)
	        	    {
						_Part1_W = TearOff.Part1;
					}
					return _Part1_W;
				}
			}

			public WhereParameter Part2
		    {
				get
		        {
					if(_Part2_W == null)
	        	    {
						_Part2_W = TearOff.Part2;
					}
					return _Part2_W;
				}
			}

			public WhereParameter Part3
		    {
				get
		        {
					if(_Part3_W == null)
	        	    {
						_Part3_W = TearOff.Part3;
					}
					return _Part3_W;
				}
			}

			public WhereParameter Part4
		    {
				get
		        {
					if(_Part4_W == null)
	        	    {
						_Part4_W = TearOff.Part4;
					}
					return _Part4_W;
				}
			}

			public WhereParameter Part5
		    {
				get
		        {
					if(_Part5_W == null)
	        	    {
						_Part5_W = TearOff.Part5;
					}
					return _Part5_W;
				}
			}

			private WhereParameter _Title_ID_W = null;
			private WhereParameter _Category_Id_W = null;
			private WhereParameter _Good_FirstDate_W = null;
			private WhereParameter _Good_CurrentCount_W = null;
			private WhereParameter _Good_TraidName_W = null;
			private WhereParameter _Part1_W = null;
			private WhereParameter _Part2_W = null;
			private WhereParameter _Part3_W = null;
			private WhereParameter _Part4_W = null;
			private WhereParameter _Part5_W = null;

			public void WhereClauseReset()
			{
				_Title_ID_W = null;
				_Category_Id_W = null;
				_Good_FirstDate_W = null;
				_Good_CurrentCount_W = null;
				_Good_TraidName_W = null;
				_Part1_W = null;
				_Part2_W = null;
				_Part3_W = null;
				_Part4_W = null;
				_Part5_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Title_ID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Title_ID, Parameters.Title_ID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Category_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Category_Id, Parameters.Category_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Good_FirstDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Good_FirstDate, Parameters.Good_FirstDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Good_CurrentCount
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Good_CurrentCount, Parameters.Good_CurrentCount);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Good_TraidName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Good_TraidName, Parameters.Good_TraidName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Part1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Part1, Parameters.Part1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Part2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Part2, Parameters.Part2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Part3
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Part3, Parameters.Part3);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Part4
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Part4, Parameters.Part4);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Part5
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Part5, Parameters.Part5);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Title_ID
		    {
				get
		        {
					if(_Title_ID_W == null)
	        	    {
						_Title_ID_W = TearOff.Title_ID;
					}
					return _Title_ID_W;
				}
			}

			public AggregateParameter Category_Id
		    {
				get
		        {
					if(_Category_Id_W == null)
	        	    {
						_Category_Id_W = TearOff.Category_Id;
					}
					return _Category_Id_W;
				}
			}

			public AggregateParameter Good_FirstDate
		    {
				get
		        {
					if(_Good_FirstDate_W == null)
	        	    {
						_Good_FirstDate_W = TearOff.Good_FirstDate;
					}
					return _Good_FirstDate_W;
				}
			}

			public AggregateParameter Good_CurrentCount
		    {
				get
		        {
					if(_Good_CurrentCount_W == null)
	        	    {
						_Good_CurrentCount_W = TearOff.Good_CurrentCount;
					}
					return _Good_CurrentCount_W;
				}
			}

			public AggregateParameter Good_TraidName
		    {
				get
		        {
					if(_Good_TraidName_W == null)
	        	    {
						_Good_TraidName_W = TearOff.Good_TraidName;
					}
					return _Good_TraidName_W;
				}
			}

			public AggregateParameter Part1
		    {
				get
		        {
					if(_Part1_W == null)
	        	    {
						_Part1_W = TearOff.Part1;
					}
					return _Part1_W;
				}
			}

			public AggregateParameter Part2
		    {
				get
		        {
					if(_Part2_W == null)
	        	    {
						_Part2_W = TearOff.Part2;
					}
					return _Part2_W;
				}
			}

			public AggregateParameter Part3
		    {
				get
		        {
					if(_Part3_W == null)
	        	    {
						_Part3_W = TearOff.Part3;
					}
					return _Part3_W;
				}
			}

			public AggregateParameter Part4
		    {
				get
		        {
					if(_Part4_W == null)
	        	    {
						_Part4_W = TearOff.Part4;
					}
					return _Part4_W;
				}
			}

			public AggregateParameter Part5
		    {
				get
		        {
					if(_Part5_W == null)
	        	    {
						_Part5_W = TearOff.Part5;
					}
					return _Part5_W;
				}
			}

			private AggregateParameter _Title_ID_W = null;
			private AggregateParameter _Category_Id_W = null;
			private AggregateParameter _Good_FirstDate_W = null;
			private AggregateParameter _Good_CurrentCount_W = null;
			private AggregateParameter _Good_TraidName_W = null;
			private AggregateParameter _Part1_W = null;
			private AggregateParameter _Part2_W = null;
			private AggregateParameter _Part3_W = null;
			private AggregateParameter _Part4_W = null;
			private AggregateParameter _Part5_W = null;

			public void AggregateClauseReset()
			{
				_Title_ID_W = null;
				_Category_Id_W = null;
				_Good_FirstDate_W = null;
				_Good_CurrentCount_W = null;
				_Good_TraidName_W = null;
				_Part1_W = null;
				_Part2_W = null;
				_Part3_W = null;
				_Part4_W = null;
				_Part5_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}

/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace MyPro
{
	public class ViewVendorsBills : SqlClientEntity
	{
		public ViewVendorsBills()
		{
			this.QuerySource = "ViewVendorsBills";
			this.MappingName = "ViewVendorsBills";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Bill_ID
			{
				get
				{
					return new SqlParameter("@Bill_ID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Bill_PayType
			{
				get
				{
					return new SqlParameter("@Bill_PayType", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_VendorId
			{
				get
				{
					return new SqlParameter("@Bill_VendorId", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Bill_Sender
			{
				get
				{
					return new SqlParameter("@Bill_Sender", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Details
			{
				get
				{
					return new SqlParameter("@Bill_Details", SqlDbType.NVarChar, 1073741823);
				}
			}
			
			public static SqlParameter Bill_VendorNumber
			{
				get
				{
					return new SqlParameter("@Bill_VendorNumber", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Date
			{
				get
				{
					return new SqlParameter("@Bill_Date", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter Bill_DiscountType
			{
				get
				{
					return new SqlParameter("@Bill_DiscountType", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Discount
			{
				get
				{
					return new SqlParameter("@Bill_Discount", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_Discount_Money
			{
				get
				{
					return new SqlParameter("@Bill_Discount_Money", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter User_Id
			{
				get
				{
					return new SqlParameter("@User_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Bank_Id
			{
				get
				{
					return new SqlParameter("@Bank_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Vendor_Name
			{
				get
				{
					return new SqlParameter("@Vendor_Name", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter User_Name
			{
				get
				{
					return new SqlParameter("@User_Name", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Store_Id
			{
				get
				{
					return new SqlParameter("@Store_Id", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Vendor_Email
			{
				get
				{
					return new SqlParameter("@Vendor_Email", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter Bill_Vat
			{
				get
				{
					return new SqlParameter("@Bill_Vat", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Bill_Vat_Value
			{
				get
				{
					return new SqlParameter("@Bill_Vat_Value", SqlDbType.Float, 0);
				}
			}
			
			public static SqlParameter Vendor_Fax
			{
				get
				{
					return new SqlParameter("@Vendor_Fax", SqlDbType.NVarChar, 50);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Bill_ID = "Bill_ID";
            public const string Bill_PayType = "Bill_PayType";
            public const string Bill_VendorId = "Bill_VendorId";
            public const string Bill_Sender = "Bill_Sender";
            public const string Bill_Details = "Bill_Details";
            public const string Bill_VendorNumber = "Bill_VendorNumber";
            public const string Bill_Date = "Bill_Date";
            public const string Bill_DiscountType = "Bill_DiscountType";
            public const string Bill_Discount = "Bill_Discount";
            public const string Bill_Discount_Money = "Bill_Discount_Money";
            public const string User_Id = "User_Id";
            public const string Bank_Id = "Bank_Id";
            public const string Vendor_Name = "Vendor_Name";
            public const string User_Name = "User_Name";
            public const string Store_Id = "Store_Id";
            public const string Vendor_Email = "Vendor_Email";
            public const string Bill_Vat = "Bill_Vat";
            public const string Bill_Vat_Value = "Bill_Vat_Value";
            public const string Vendor_Fax = "Vendor_Fax";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Bill_ID] = ViewVendorsBills.PropertyNames.Bill_ID;
					ht[Bill_PayType] = ViewVendorsBills.PropertyNames.Bill_PayType;
					ht[Bill_VendorId] = ViewVendorsBills.PropertyNames.Bill_VendorId;
					ht[Bill_Sender] = ViewVendorsBills.PropertyNames.Bill_Sender;
					ht[Bill_Details] = ViewVendorsBills.PropertyNames.Bill_Details;
					ht[Bill_VendorNumber] = ViewVendorsBills.PropertyNames.Bill_VendorNumber;
					ht[Bill_Date] = ViewVendorsBills.PropertyNames.Bill_Date;
					ht[Bill_DiscountType] = ViewVendorsBills.PropertyNames.Bill_DiscountType;
					ht[Bill_Discount] = ViewVendorsBills.PropertyNames.Bill_Discount;
					ht[Bill_Discount_Money] = ViewVendorsBills.PropertyNames.Bill_Discount_Money;
					ht[User_Id] = ViewVendorsBills.PropertyNames.User_Id;
					ht[Bank_Id] = ViewVendorsBills.PropertyNames.Bank_Id;
					ht[Vendor_Name] = ViewVendorsBills.PropertyNames.Vendor_Name;
					ht[User_Name] = ViewVendorsBills.PropertyNames.User_Name;
					ht[Store_Id] = ViewVendorsBills.PropertyNames.Store_Id;
					ht[Vendor_Email] = ViewVendorsBills.PropertyNames.Vendor_Email;
					ht[Bill_Vat] = ViewVendorsBills.PropertyNames.Bill_Vat;
					ht[Bill_Vat_Value] = ViewVendorsBills.PropertyNames.Bill_Vat_Value;
					ht[Vendor_Fax] = ViewVendorsBills.PropertyNames.Vendor_Fax;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Bill_ID = "Bill_ID";
            public const string Bill_PayType = "Bill_PayType";
            public const string Bill_VendorId = "Bill_VendorId";
            public const string Bill_Sender = "Bill_Sender";
            public const string Bill_Details = "Bill_Details";
            public const string Bill_VendorNumber = "Bill_VendorNumber";
            public const string Bill_Date = "Bill_Date";
            public const string Bill_DiscountType = "Bill_DiscountType";
            public const string Bill_Discount = "Bill_Discount";
            public const string Bill_Discount_Money = "Bill_Discount_Money";
            public const string User_Id = "User_Id";
            public const string Bank_Id = "Bank_Id";
            public const string Vendor_Name = "Vendor_Name";
            public const string User_Name = "User_Name";
            public const string Store_Id = "Store_Id";
            public const string Vendor_Email = "Vendor_Email";
            public const string Bill_Vat = "Bill_Vat";
            public const string Bill_Vat_Value = "Bill_Vat_Value";
            public const string Vendor_Fax = "Vendor_Fax";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Bill_ID] = ViewVendorsBills.ColumnNames.Bill_ID;
					ht[Bill_PayType] = ViewVendorsBills.ColumnNames.Bill_PayType;
					ht[Bill_VendorId] = ViewVendorsBills.ColumnNames.Bill_VendorId;
					ht[Bill_Sender] = ViewVendorsBills.ColumnNames.Bill_Sender;
					ht[Bill_Details] = ViewVendorsBills.ColumnNames.Bill_Details;
					ht[Bill_VendorNumber] = ViewVendorsBills.ColumnNames.Bill_VendorNumber;
					ht[Bill_Date] = ViewVendorsBills.ColumnNames.Bill_Date;
					ht[Bill_DiscountType] = ViewVendorsBills.ColumnNames.Bill_DiscountType;
					ht[Bill_Discount] = ViewVendorsBills.ColumnNames.Bill_Discount;
					ht[Bill_Discount_Money] = ViewVendorsBills.ColumnNames.Bill_Discount_Money;
					ht[User_Id] = ViewVendorsBills.ColumnNames.User_Id;
					ht[Bank_Id] = ViewVendorsBills.ColumnNames.Bank_Id;
					ht[Vendor_Name] = ViewVendorsBills.ColumnNames.Vendor_Name;
					ht[User_Name] = ViewVendorsBills.ColumnNames.User_Name;
					ht[Store_Id] = ViewVendorsBills.ColumnNames.Store_Id;
					ht[Vendor_Email] = ViewVendorsBills.ColumnNames.Vendor_Email;
					ht[Bill_Vat] = ViewVendorsBills.ColumnNames.Bill_Vat;
					ht[Bill_Vat_Value] = ViewVendorsBills.ColumnNames.Bill_Vat_Value;
					ht[Vendor_Fax] = ViewVendorsBills.ColumnNames.Vendor_Fax;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Bill_ID = "s_Bill_ID";
            public const string Bill_PayType = "s_Bill_PayType";
            public const string Bill_VendorId = "s_Bill_VendorId";
            public const string Bill_Sender = "s_Bill_Sender";
            public const string Bill_Details = "s_Bill_Details";
            public const string Bill_VendorNumber = "s_Bill_VendorNumber";
            public const string Bill_Date = "s_Bill_Date";
            public const string Bill_DiscountType = "s_Bill_DiscountType";
            public const string Bill_Discount = "s_Bill_Discount";
            public const string Bill_Discount_Money = "s_Bill_Discount_Money";
            public const string User_Id = "s_User_Id";
            public const string Bank_Id = "s_Bank_Id";
            public const string Vendor_Name = "s_Vendor_Name";
            public const string User_Name = "s_User_Name";
            public const string Store_Id = "s_Store_Id";
            public const string Vendor_Email = "s_Vendor_Email";
            public const string Bill_Vat = "s_Bill_Vat";
            public const string Bill_Vat_Value = "s_Bill_Vat_Value";
            public const string Vendor_Fax = "s_Vendor_Fax";

		}
		#endregion	
		
		#region Properties
			public virtual int Bill_ID
	    {
			get
	        {
				return base.Getint(ColumnNames.Bill_ID);
			}
			set
	        {
				base.Setint(ColumnNames.Bill_ID, value);
			}
		}

		public virtual string Bill_PayType
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_PayType);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_PayType, value);
			}
		}

		public virtual int Bill_VendorId
	    {
			get
	        {
				return base.Getint(ColumnNames.Bill_VendorId);
			}
			set
	        {
				base.Setint(ColumnNames.Bill_VendorId, value);
			}
		}

		public virtual string Bill_Sender
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Sender);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Sender, value);
			}
		}

		public virtual string Bill_Details
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_Details);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_Details, value);
			}
		}

		public virtual string Bill_VendorNumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_VendorNumber);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_VendorNumber, value);
			}
		}

		public virtual DateTime Bill_Date
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.Bill_Date);
			}
			set
	        {
				base.SetDateTime(ColumnNames.Bill_Date, value);
			}
		}

		public virtual string Bill_DiscountType
	    {
			get
	        {
				return base.Getstring(ColumnNames.Bill_DiscountType);
			}
			set
	        {
				base.Setstring(ColumnNames.Bill_DiscountType, value);
			}
		}

		public virtual double Bill_Discount
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Discount);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Discount, value);
			}
		}

		public virtual double Bill_Discount_Money
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Discount_Money);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Discount_Money, value);
			}
		}

		public virtual int User_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.User_Id);
			}
			set
	        {
				base.Setint(ColumnNames.User_Id, value);
			}
		}

		public virtual int Bank_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Bank_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Bank_Id, value);
			}
		}

		public virtual string Vendor_Name
	    {
			get
	        {
				return base.Getstring(ColumnNames.Vendor_Name);
			}
			set
	        {
				base.Setstring(ColumnNames.Vendor_Name, value);
			}
		}

		public virtual string User_Name
	    {
			get
	        {
				return base.Getstring(ColumnNames.User_Name);
			}
			set
	        {
				base.Setstring(ColumnNames.User_Name, value);
			}
		}

		public virtual int Store_Id
	    {
			get
	        {
				return base.Getint(ColumnNames.Store_Id);
			}
			set
	        {
				base.Setint(ColumnNames.Store_Id, value);
			}
		}

		public virtual string Vendor_Email
	    {
			get
	        {
				return base.Getstring(ColumnNames.Vendor_Email);
			}
			set
	        {
				base.Setstring(ColumnNames.Vendor_Email, value);
			}
		}

		public virtual double Bill_Vat
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Vat);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Vat, value);
			}
		}

		public virtual double Bill_Vat_Value
	    {
			get
	        {
				return base.Getdouble(ColumnNames.Bill_Vat_Value);
			}
			set
	        {
				base.Setdouble(ColumnNames.Bill_Vat_Value, value);
			}
		}

		public virtual string Vendor_Fax
	    {
			get
	        {
				return base.Getstring(ColumnNames.Vendor_Fax);
			}
			set
	        {
				base.Setstring(ColumnNames.Vendor_Fax, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Bill_ID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_ID) ? string.Empty : base.GetintAsString(ColumnNames.Bill_ID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_ID);
				else
					this.Bill_ID = base.SetintAsString(ColumnNames.Bill_ID, value);
			}
		}

		public virtual string s_Bill_PayType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_PayType) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_PayType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_PayType);
				else
					this.Bill_PayType = base.SetstringAsString(ColumnNames.Bill_PayType, value);
			}
		}

		public virtual string s_Bill_VendorId
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_VendorId) ? string.Empty : base.GetintAsString(ColumnNames.Bill_VendorId);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_VendorId);
				else
					this.Bill_VendorId = base.SetintAsString(ColumnNames.Bill_VendorId, value);
			}
		}

		public virtual string s_Bill_Sender
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Sender) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Sender);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Sender);
				else
					this.Bill_Sender = base.SetstringAsString(ColumnNames.Bill_Sender, value);
			}
		}

		public virtual string s_Bill_Details
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Details) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_Details);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Details);
				else
					this.Bill_Details = base.SetstringAsString(ColumnNames.Bill_Details, value);
			}
		}

		public virtual string s_Bill_VendorNumber
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_VendorNumber) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_VendorNumber);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_VendorNumber);
				else
					this.Bill_VendorNumber = base.SetstringAsString(ColumnNames.Bill_VendorNumber, value);
			}
		}

		public virtual string s_Bill_Date
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Date) ? string.Empty : base.GetDateTimeAsString(ColumnNames.Bill_Date);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Date);
				else
					this.Bill_Date = base.SetDateTimeAsString(ColumnNames.Bill_Date, value);
			}
		}

		public virtual string s_Bill_DiscountType
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_DiscountType) ? string.Empty : base.GetstringAsString(ColumnNames.Bill_DiscountType);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_DiscountType);
				else
					this.Bill_DiscountType = base.SetstringAsString(ColumnNames.Bill_DiscountType, value);
			}
		}

		public virtual string s_Bill_Discount
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Discount) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Discount);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Discount);
				else
					this.Bill_Discount = base.SetdoubleAsString(ColumnNames.Bill_Discount, value);
			}
		}

		public virtual string s_Bill_Discount_Money
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Discount_Money) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Discount_Money);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Discount_Money);
				else
					this.Bill_Discount_Money = base.SetdoubleAsString(ColumnNames.Bill_Discount_Money, value);
			}
		}

		public virtual string s_User_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.User_Id) ? string.Empty : base.GetintAsString(ColumnNames.User_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.User_Id);
				else
					this.User_Id = base.SetintAsString(ColumnNames.User_Id, value);
			}
		}

		public virtual string s_Bank_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bank_Id) ? string.Empty : base.GetintAsString(ColumnNames.Bank_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bank_Id);
				else
					this.Bank_Id = base.SetintAsString(ColumnNames.Bank_Id, value);
			}
		}

		public virtual string s_Vendor_Name
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Vendor_Name) ? string.Empty : base.GetstringAsString(ColumnNames.Vendor_Name);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Vendor_Name);
				else
					this.Vendor_Name = base.SetstringAsString(ColumnNames.Vendor_Name, value);
			}
		}

		public virtual string s_User_Name
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.User_Name) ? string.Empty : base.GetstringAsString(ColumnNames.User_Name);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.User_Name);
				else
					this.User_Name = base.SetstringAsString(ColumnNames.User_Name, value);
			}
		}

		public virtual string s_Store_Id
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Store_Id) ? string.Empty : base.GetintAsString(ColumnNames.Store_Id);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Store_Id);
				else
					this.Store_Id = base.SetintAsString(ColumnNames.Store_Id, value);
			}
		}

		public virtual string s_Vendor_Email
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Vendor_Email) ? string.Empty : base.GetstringAsString(ColumnNames.Vendor_Email);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Vendor_Email);
				else
					this.Vendor_Email = base.SetstringAsString(ColumnNames.Vendor_Email, value);
			}
		}

		public virtual string s_Bill_Vat
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Vat) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Vat);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Vat);
				else
					this.Bill_Vat = base.SetdoubleAsString(ColumnNames.Bill_Vat, value);
			}
		}

		public virtual string s_Bill_Vat_Value
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Bill_Vat_Value) ? string.Empty : base.GetdoubleAsString(ColumnNames.Bill_Vat_Value);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Bill_Vat_Value);
				else
					this.Bill_Vat_Value = base.SetdoubleAsString(ColumnNames.Bill_Vat_Value, value);
			}
		}

		public virtual string s_Vendor_Fax
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Vendor_Fax) ? string.Empty : base.GetstringAsString(ColumnNames.Vendor_Fax);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Vendor_Fax);
				else
					this.Vendor_Fax = base.SetstringAsString(ColumnNames.Vendor_Fax, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Bill_ID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_ID, Parameters.Bill_ID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_PayType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_PayType, Parameters.Bill_PayType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_VendorId
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_VendorId, Parameters.Bill_VendorId);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Sender
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Sender, Parameters.Bill_Sender);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Details
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Details, Parameters.Bill_Details);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_VendorNumber
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_VendorNumber, Parameters.Bill_VendorNumber);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Date
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Date, Parameters.Bill_Date);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_DiscountType
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_DiscountType, Parameters.Bill_DiscountType);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Discount
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Discount, Parameters.Bill_Discount);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Discount_Money
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Discount_Money, Parameters.Bill_Discount_Money);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter User_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.User_Id, Parameters.User_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bank_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bank_Id, Parameters.Bank_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Vendor_Name
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Vendor_Name, Parameters.Vendor_Name);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter User_Name
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.User_Name, Parameters.User_Name);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Store_Id
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Store_Id, Parameters.Store_Id);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Vendor_Email
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Vendor_Email, Parameters.Vendor_Email);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Vat
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Vat, Parameters.Bill_Vat);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Bill_Vat_Value
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Bill_Vat_Value, Parameters.Bill_Vat_Value);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Vendor_Fax
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Vendor_Fax, Parameters.Vendor_Fax);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Bill_ID
		    {
				get
		        {
					if(_Bill_ID_W == null)
	        	    {
						_Bill_ID_W = TearOff.Bill_ID;
					}
					return _Bill_ID_W;
				}
			}

			public WhereParameter Bill_PayType
		    {
				get
		        {
					if(_Bill_PayType_W == null)
	        	    {
						_Bill_PayType_W = TearOff.Bill_PayType;
					}
					return _Bill_PayType_W;
				}
			}

			public WhereParameter Bill_VendorId
		    {
				get
		        {
					if(_Bill_VendorId_W == null)
	        	    {
						_Bill_VendorId_W = TearOff.Bill_VendorId;
					}
					return _Bill_VendorId_W;
				}
			}

			public WhereParameter Bill_Sender
		    {
				get
		        {
					if(_Bill_Sender_W == null)
	        	    {
						_Bill_Sender_W = TearOff.Bill_Sender;
					}
					return _Bill_Sender_W;
				}
			}

			public WhereParameter Bill_Details
		    {
				get
		        {
					if(_Bill_Details_W == null)
	        	    {
						_Bill_Details_W = TearOff.Bill_Details;
					}
					return _Bill_Details_W;
				}
			}

			public WhereParameter Bill_VendorNumber
		    {
				get
		        {
					if(_Bill_VendorNumber_W == null)
	        	    {
						_Bill_VendorNumber_W = TearOff.Bill_VendorNumber;
					}
					return _Bill_VendorNumber_W;
				}
			}

			public WhereParameter Bill_Date
		    {
				get
		        {
					if(_Bill_Date_W == null)
	        	    {
						_Bill_Date_W = TearOff.Bill_Date;
					}
					return _Bill_Date_W;
				}
			}

			public WhereParameter Bill_DiscountType
		    {
				get
		        {
					if(_Bill_DiscountType_W == null)
	        	    {
						_Bill_DiscountType_W = TearOff.Bill_DiscountType;
					}
					return _Bill_DiscountType_W;
				}
			}

			public WhereParameter Bill_Discount
		    {
				get
		        {
					if(_Bill_Discount_W == null)
	        	    {
						_Bill_Discount_W = TearOff.Bill_Discount;
					}
					return _Bill_Discount_W;
				}
			}

			public WhereParameter Bill_Discount_Money
		    {
				get
		        {
					if(_Bill_Discount_Money_W == null)
	        	    {
						_Bill_Discount_Money_W = TearOff.Bill_Discount_Money;
					}
					return _Bill_Discount_Money_W;
				}
			}

			public WhereParameter User_Id
		    {
				get
		        {
					if(_User_Id_W == null)
	        	    {
						_User_Id_W = TearOff.User_Id;
					}
					return _User_Id_W;
				}
			}

			public WhereParameter Bank_Id
		    {
				get
		        {
					if(_Bank_Id_W == null)
	        	    {
						_Bank_Id_W = TearOff.Bank_Id;
					}
					return _Bank_Id_W;
				}
			}

			public WhereParameter Vendor_Name
		    {
				get
		        {
					if(_Vendor_Name_W == null)
	        	    {
						_Vendor_Name_W = TearOff.Vendor_Name;
					}
					return _Vendor_Name_W;
				}
			}

			public WhereParameter User_Name
		    {
				get
		        {
					if(_User_Name_W == null)
	        	    {
						_User_Name_W = TearOff.User_Name;
					}
					return _User_Name_W;
				}
			}

			public WhereParameter Store_Id
		    {
				get
		        {
					if(_Store_Id_W == null)
	        	    {
						_Store_Id_W = TearOff.Store_Id;
					}
					return _Store_Id_W;
				}
			}

			public WhereParameter Vendor_Email
		    {
				get
		        {
					if(_Vendor_Email_W == null)
	        	    {
						_Vendor_Email_W = TearOff.Vendor_Email;
					}
					return _Vendor_Email_W;
				}
			}

			public WhereParameter Bill_Vat
		    {
				get
		        {
					if(_Bill_Vat_W == null)
	        	    {
						_Bill_Vat_W = TearOff.Bill_Vat;
					}
					return _Bill_Vat_W;
				}
			}

			public WhereParameter Bill_Vat_Value
		    {
				get
		        {
					if(_Bill_Vat_Value_W == null)
	        	    {
						_Bill_Vat_Value_W = TearOff.Bill_Vat_Value;
					}
					return _Bill_Vat_Value_W;
				}
			}

			public WhereParameter Vendor_Fax
		    {
				get
		        {
					if(_Vendor_Fax_W == null)
	        	    {
						_Vendor_Fax_W = TearOff.Vendor_Fax;
					}
					return _Vendor_Fax_W;
				}
			}

			private WhereParameter _Bill_ID_W = null;
			private WhereParameter _Bill_PayType_W = null;
			private WhereParameter _Bill_VendorId_W = null;
			private WhereParameter _Bill_Sender_W = null;
			private WhereParameter _Bill_Details_W = null;
			private WhereParameter _Bill_VendorNumber_W = null;
			private WhereParameter _Bill_Date_W = null;
			private WhereParameter _Bill_DiscountType_W = null;
			private WhereParameter _Bill_Discount_W = null;
			private WhereParameter _Bill_Discount_Money_W = null;
			private WhereParameter _User_Id_W = null;
			private WhereParameter _Bank_Id_W = null;
			private WhereParameter _Vendor_Name_W = null;
			private WhereParameter _User_Name_W = null;
			private WhereParameter _Store_Id_W = null;
			private WhereParameter _Vendor_Email_W = null;
			private WhereParameter _Bill_Vat_W = null;
			private WhereParameter _Bill_Vat_Value_W = null;
			private WhereParameter _Vendor_Fax_W = null;

			public void WhereClauseReset()
			{
				_Bill_ID_W = null;
				_Bill_PayType_W = null;
				_Bill_VendorId_W = null;
				_Bill_Sender_W = null;
				_Bill_Details_W = null;
				_Bill_VendorNumber_W = null;
				_Bill_Date_W = null;
				_Bill_DiscountType_W = null;
				_Bill_Discount_W = null;
				_Bill_Discount_Money_W = null;
				_User_Id_W = null;
				_Bank_Id_W = null;
				_Vendor_Name_W = null;
				_User_Name_W = null;
				_Store_Id_W = null;
				_Vendor_Email_W = null;
				_Bill_Vat_W = null;
				_Bill_Vat_Value_W = null;
				_Vendor_Fax_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Bill_ID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_ID, Parameters.Bill_ID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_PayType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_PayType, Parameters.Bill_PayType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_VendorId
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_VendorId, Parameters.Bill_VendorId);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Sender
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Sender, Parameters.Bill_Sender);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Details
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Details, Parameters.Bill_Details);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_VendorNumber
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_VendorNumber, Parameters.Bill_VendorNumber);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Date
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Date, Parameters.Bill_Date);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_DiscountType
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_DiscountType, Parameters.Bill_DiscountType);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Discount
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Discount, Parameters.Bill_Discount);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Discount_Money
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Discount_Money, Parameters.Bill_Discount_Money);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter User_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.User_Id, Parameters.User_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bank_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bank_Id, Parameters.Bank_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Vendor_Name
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Vendor_Name, Parameters.Vendor_Name);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter User_Name
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.User_Name, Parameters.User_Name);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Store_Id
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Store_Id, Parameters.Store_Id);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Vendor_Email
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Vendor_Email, Parameters.Vendor_Email);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Vat
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Vat, Parameters.Bill_Vat);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Bill_Vat_Value
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Bill_Vat_Value, Parameters.Bill_Vat_Value);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Vendor_Fax
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Vendor_Fax, Parameters.Vendor_Fax);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Bill_ID
		    {
				get
		        {
					if(_Bill_ID_W == null)
	        	    {
						_Bill_ID_W = TearOff.Bill_ID;
					}
					return _Bill_ID_W;
				}
			}

			public AggregateParameter Bill_PayType
		    {
				get
		        {
					if(_Bill_PayType_W == null)
	        	    {
						_Bill_PayType_W = TearOff.Bill_PayType;
					}
					return _Bill_PayType_W;
				}
			}

			public AggregateParameter Bill_VendorId
		    {
				get
		        {
					if(_Bill_VendorId_W == null)
	        	    {
						_Bill_VendorId_W = TearOff.Bill_VendorId;
					}
					return _Bill_VendorId_W;
				}
			}

			public AggregateParameter Bill_Sender
		    {
				get
		        {
					if(_Bill_Sender_W == null)
	        	    {
						_Bill_Sender_W = TearOff.Bill_Sender;
					}
					return _Bill_Sender_W;
				}
			}

			public AggregateParameter Bill_Details
		    {
				get
		        {
					if(_Bill_Details_W == null)
	        	    {
						_Bill_Details_W = TearOff.Bill_Details;
					}
					return _Bill_Details_W;
				}
			}

			public AggregateParameter Bill_VendorNumber
		    {
				get
		        {
					if(_Bill_VendorNumber_W == null)
	        	    {
						_Bill_VendorNumber_W = TearOff.Bill_VendorNumber;
					}
					return _Bill_VendorNumber_W;
				}
			}

			public AggregateParameter Bill_Date
		    {
				get
		        {
					if(_Bill_Date_W == null)
	        	    {
						_Bill_Date_W = TearOff.Bill_Date;
					}
					return _Bill_Date_W;
				}
			}

			public AggregateParameter Bill_DiscountType
		    {
				get
		        {
					if(_Bill_DiscountType_W == null)
	        	    {
						_Bill_DiscountType_W = TearOff.Bill_DiscountType;
					}
					return _Bill_DiscountType_W;
				}
			}

			public AggregateParameter Bill_Discount
		    {
				get
		        {
					if(_Bill_Discount_W == null)
	        	    {
						_Bill_Discount_W = TearOff.Bill_Discount;
					}
					return _Bill_Discount_W;
				}
			}

			public AggregateParameter Bill_Discount_Money
		    {
				get
		        {
					if(_Bill_Discount_Money_W == null)
	        	    {
						_Bill_Discount_Money_W = TearOff.Bill_Discount_Money;
					}
					return _Bill_Discount_Money_W;
				}
			}

			public AggregateParameter User_Id
		    {
				get
		        {
					if(_User_Id_W == null)
	        	    {
						_User_Id_W = TearOff.User_Id;
					}
					return _User_Id_W;
				}
			}

			public AggregateParameter Bank_Id
		    {
				get
		        {
					if(_Bank_Id_W == null)
	        	    {
						_Bank_Id_W = TearOff.Bank_Id;
					}
					return _Bank_Id_W;
				}
			}

			public AggregateParameter Vendor_Name
		    {
				get
		        {
					if(_Vendor_Name_W == null)
	        	    {
						_Vendor_Name_W = TearOff.Vendor_Name;
					}
					return _Vendor_Name_W;
				}
			}

			public AggregateParameter User_Name
		    {
				get
		        {
					if(_User_Name_W == null)
	        	    {
						_User_Name_W = TearOff.User_Name;
					}
					return _User_Name_W;
				}
			}

			public AggregateParameter Store_Id
		    {
				get
		        {
					if(_Store_Id_W == null)
	        	    {
						_Store_Id_W = TearOff.Store_Id;
					}
					return _Store_Id_W;
				}
			}

			public AggregateParameter Vendor_Email
		    {
				get
		        {
					if(_Vendor_Email_W == null)
	        	    {
						_Vendor_Email_W = TearOff.Vendor_Email;
					}
					return _Vendor_Email_W;
				}
			}

			public AggregateParameter Bill_Vat
		    {
				get
		        {
					if(_Bill_Vat_W == null)
	        	    {
						_Bill_Vat_W = TearOff.Bill_Vat;
					}
					return _Bill_Vat_W;
				}
			}

			public AggregateParameter Bill_Vat_Value
		    {
				get
		        {
					if(_Bill_Vat_Value_W == null)
	        	    {
						_Bill_Vat_Value_W = TearOff.Bill_Vat_Value;
					}
					return _Bill_Vat_Value_W;
				}
			}

			public AggregateParameter Vendor_Fax
		    {
				get
		        {
					if(_Vendor_Fax_W == null)
	        	    {
						_Vendor_Fax_W = TearOff.Vendor_Fax;
					}
					return _Vendor_Fax_W;
				}
			}

			private AggregateParameter _Bill_ID_W = null;
			private AggregateParameter _Bill_PayType_W = null;
			private AggregateParameter _Bill_VendorId_W = null;
			private AggregateParameter _Bill_Sender_W = null;
			private AggregateParameter _Bill_Details_W = null;
			private AggregateParameter _Bill_VendorNumber_W = null;
			private AggregateParameter _Bill_Date_W = null;
			private AggregateParameter _Bill_DiscountType_W = null;
			private AggregateParameter _Bill_Discount_W = null;
			private AggregateParameter _Bill_Discount_Money_W = null;
			private AggregateParameter _User_Id_W = null;
			private AggregateParameter _Bank_Id_W = null;
			private AggregateParameter _Vendor_Name_W = null;
			private AggregateParameter _User_Name_W = null;
			private AggregateParameter _Store_Id_W = null;
			private AggregateParameter _Vendor_Email_W = null;
			private AggregateParameter _Bill_Vat_W = null;
			private AggregateParameter _Bill_Vat_Value_W = null;
			private AggregateParameter _Vendor_Fax_W = null;

			public void AggregateClauseReset()
			{
				_Bill_ID_W = null;
				_Bill_PayType_W = null;
				_Bill_VendorId_W = null;
				_Bill_Sender_W = null;
				_Bill_Details_W = null;
				_Bill_VendorNumber_W = null;
				_Bill_Date_W = null;
				_Bill_DiscountType_W = null;
				_Bill_Discount_W = null;
				_Bill_Discount_Money_W = null;
				_User_Id_W = null;
				_Bank_Id_W = null;
				_Vendor_Name_W = null;
				_User_Name_W = null;
				_Store_Id_W = null;
				_Vendor_Email_W = null;
				_Bill_Vat_W = null;
				_Bill_Vat_Value_W = null;
				_Vendor_Fax_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
